package JENKINS::MSF::JenkinsCommand;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "JenkinsCommand";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CTYPE => "application/x-www-form-urlencoded",
  CVE => "CVE-2015-8103",
  DESCRIPTION => "

        This module scans for unauthenticated Jenkins-CI script consoles and

        executes the specified command.

      ",
  METHOD => "GET",
  MSF_MODULE => "jenkins_command",
  PATHS => ["jenkins/"],
  REFERENCES => [
    "https://jenkins.io/security/advisory/2015-11-11/",
    "https://www.pentestgeek.com/penetration-testing/hacking-jenkins-servers-with-no-password/",
    "https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+Script+Console",
  ],
  TITLE => "Jenkins-CI Unauthenticated Script-Console Scanner",
  VARIABLES => {
    'COMMAND' =>       { DESCRIPTION => "Command to run in application", VALUE => "whoami" },
    'PATH' =>       {
  DESCRIPTION => "The path to the Jenkins-CI application",
  VALUE => "/jenkins/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
