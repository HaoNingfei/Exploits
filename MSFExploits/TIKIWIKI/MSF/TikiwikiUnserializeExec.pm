package TIKIWIKI::MSF::TikiwikiUnserializeExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "TikiwikiUnserializeExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2012-0911",
  DESCRIPTION => "

          This module exploits a php unserialize() vulnerability in Tiki Wiki <= 8.3

        which could be abused to allow unauthenticated users to execute arbitrary code

        under the context of the webserver user.



        The dangerous unserialize() exists in the 'tiki-print_multi_pages.php' script,

        which is called with user controlled data from the 'printpages' parameter.

        The exploit abuses the __destruct() method from the Zend_Pdf_ElementFactory_Proxy

        class to write arbitrary PHP code to a file on the Tiki Wiki web directory.



        In order to run successfully three conditions must be satisfied (1) display_errors

        php setting must be On to disclose the filesystem path of Tiki Wiki, (2) The Tiki

        Wiki Multiprint feature must be enabled to exploit the unserialize() and (3) a php

        version older than 5.3.4 must be used to allow poison null bytes in filesystem related

        functions. The exploit has been tested successfully on Ubuntu 9.10 and Tiki Wiki 8.3.

      ",
  MSF_MODULE => "tikiwiki_unserialize_exec",
  OSVDB => 83534,
  REFERENCES => ["http://dev.tiki.org/item4109"],
  TITLE => "Tiki Wiki unserialize() PHP Code Execution",


  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
