package RAILS::MSF::RailsXmlYamlScanner;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "RailsXmlYamlScanner";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-0156",
  DESCRIPTION => "

        This module attempts to identify Ruby on Rails instances vulnerable to

        an arbitrary object instantiation flaw in the XML request processor.

      ",
  METHOD => "",
  MSF_MODULE => "rails_xml_yaml_scanner",
  REFERENCES => [
    "https://community.rapid7.com/community/metasploit/blog/2013/01/09/serialization-mischief-in-ruby-land-cve-2013-0156",
  ],
  TITLE => "Ruby on Rails XML Processor YAML Deserialization Scanner",
  VARIABLES => {
    'URIPATH' =>       { DESCRIPTION => "", VALUE => "" },
    'RHOST' =>       { DESCRIPTION => "", VALUE => "" },
    'RPORT' =>       { DESCRIPTION => "", VALUE => "" },
    'HTTP_METHOD' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => read_file('MSFExploits/RAILS/MSF/src/RailsXmlYamlScanner.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/xml',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => read_file('MSFExploits/RAILS/MSF/src/RailsXmlYamlScanner.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/xml',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => read_file('MSFExploits/RAILS/MSF/src/RailsXmlYamlScanner.payload', 1),
      TEXT   => 'Sending Exploit #2 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/xml',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
