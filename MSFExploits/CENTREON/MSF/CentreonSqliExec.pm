package CENTREON::MSF::CentreonSqliExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "CentreonSqliExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2014-3829",
  DESCRIPTION => "

        This module exploits several vulnerabilities on Centreon 2.5.1 and prior and Centreon

        Enterprise Server 2.2 and prior. Due to a combination of SQL injection and command

        injection in the displayServiceStatus.php component, it is possible to execute arbitrary

        commands as long as there is a valid session registered in the centreon.session table.

        In order to have a valid session, all it takes is a successful login from anybody.

        The exploit itself does not require any authentication.



        This module has been tested successfully on Centreon Enterprise Server 2.2.

      ",
  MSF_MODULE => "centreon_sqli_exec",
  PATHS => ["centreon"],
  REFERENCES => ["http://seclists.org/fulldisclosure/2014/Oct/78"],
  TITLE => "Centreon SQL and Command Injection",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The URI of the Centreon Application",
  VALUE => "/centreon",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
