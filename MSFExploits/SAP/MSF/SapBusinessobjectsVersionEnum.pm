package SAP::MSF::SapBusinessobjectsVersionEnum;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SapBusinessobjectsVersionEnum";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => undef,
  MSF_MODULE  => "sap_businessobjects_version_enum",
  REFERENCES  => [
                   "http://spl0it.org/files/talks/source_barcelona10/Hacking%20SAP%20BusinessObjects.pdf",
                 ],
  TITLE       => "SAP BusinessObjects Version Detection",
  VARIABLES => {
    'URI' =>       {
  DESCRIPTION => "Path to the SAP BusinessObjects Axis2",
  VALUE => "/dswsbobje",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'services/Session',
      PAYLOAD      => read_file('MSFExploits/SAP/MSF/src/SapBusinessobjectsVersionEnum.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /services/Session',
      HEADERS      => {
        'SOAPAction' => '"http://session.dsws.businessobjects.com/2007/06/01/getVersion"',
        'Content-Type' => 'text/xml; charset=UTF-8',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
