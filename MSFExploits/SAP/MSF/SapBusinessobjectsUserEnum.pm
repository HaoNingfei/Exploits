package SAP::MSF::SapBusinessobjectsUserEnum;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SapBusinessobjectsUserEnum";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module simply attempts to enumerate SAP BusinessObjects

        users. The dswsbobje interface is only used to verify valid

        users for CmcApp. Therefore, any valid users that have been

        identified can be leveraged by logging into CmcApp.

        ",
  MSF_MODULE  => "sap_businessobjects_user_enum",
  REFERENCES  => [
                   "http://spl0it.org/files/talks/source_barcelona10/Hacking%20SAP%20BusinessObjects.pdf",
                 ],
  TITLE       => "SAP BusinessObjects User Enumeration",
  VARIABLES => {
    'URI' =>       {
  DESCRIPTION => "Path to the SAP BusinessObjects Axis2",
  VALUE => "/dswsbobje",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
