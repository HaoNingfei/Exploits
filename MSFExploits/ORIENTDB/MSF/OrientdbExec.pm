package ORIENTDB::MSF::OrientdbExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "OrientdbExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "DESCRIPTION"          => "

          This module leverages a privilege escalation on OrientDB to execute unsandboxed OS commands.

          All versions from 2.2.2 up to 2.2.22 should be vulnerable.

      ",
  "HTTP BASIC AUTH USER" => "writer",
  "MSF_MODULE"           => "orientdb_exec",
  "PATHS"                => [""],
  "REFERENCES"           => [
                              "https://blogs.securiteam.com/index.php/archives/3318",
                              "http://www.palada.net/index.php/2017/07/13/news-2112/",
                              "https://github.com/orientechnologies/orientdb/wiki/OrientDB-2.2-Release-Notes#2223---july-11-2017",
                            ],
  "TITLE"                => "OrientDB 2.2.x Remote Code Execution",
  VARIABLES => {
    'PASSWORD' =>       { DESCRIPTION => "HTTP Basic Auth Password", VALUE => "writer" },
    'PATH' =>       { DESCRIPTION => "The path to the OrientDB application", VALUE => "/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
