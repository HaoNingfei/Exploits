package MSFExploits::Exploits::HYBRIDAUTH::MSF::HybridauthInstallPhpExec;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::HYBRIDAUTH);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "HybridauthInstallPhpExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits a PHP code execution vulnerability in

        HybridAuth versions 2.0.9 to 2.2.2. The install file 'install.php'

        is not removed after installation allowing unauthenticated users to

        write PHP code to the application configuration file 'config.php'.



        Note: This exploit will overwrite the application configuration file

        rendering the application unusable.

      ",
  MSF_MODULE => "hybridauth_install_php_exec",
  OSVDB => 109838,
  PATHS => ["hybridauth/"],
  TITLE => "HybridAuth install.php PHP Code Execution",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The base path to HybridAuth library",
  VALUE => "/hybridauth/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT3 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #3 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
