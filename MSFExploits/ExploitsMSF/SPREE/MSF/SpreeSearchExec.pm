package MSFExploits::Exploits::SPREE::MSF::SpreeSearchExec;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::SPREE);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "SpreeSearchExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits an arbitrary command execution vulnerability in the

          Spreecommerce search. Unvalidated input is called via the

          Ruby send method allowing command execution.

      ",
  MSF_MODULE => "spree_search_exec",
  OSVDB => 76011,
  REFERENCES => [
    "http://spreecommerce.com/blog/2011/10/05/remote-command-product-group/",
  ],
  TITLE => "Spreecommerce 0.60.1 Arbitrary Command Execution",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'User-Agent' => 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',
        'Connection' => 'Close',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
