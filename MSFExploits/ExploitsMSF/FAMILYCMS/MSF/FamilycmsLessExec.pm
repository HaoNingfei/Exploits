package MSFExploits::Exploits::FAMILYCMS::MSF::FamilycmsLessExec;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::FAMILYCMS);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "FamilycmsLessExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2011-5130",
  DESCRIPTION => "

        This module exploits an arbitrary command execution vulnerability in

        Family Connections 2.7.1. It's in the dev/less.php script and is due

        to an insecure use of system().  Authentication isn't required to exploit

        the vulnerability but register_globals must be set to On.

      ",
  MSF_MODULE => "familycms_less_exec",
  OSVDB => 77492,
  REFERENCES => [
    "https://www.familycms.com/blog/2011/11/security-vulnerability-fcms-2-5-2-7-1/",
    "http://sourceforge.net/apps/trac/fam-connections/ticket/407",
    "http://rwx.biz.nf/advisories/fc_cms_rce_adv.html",
  ],
  TITLE => "Family Connections less.php Remote Command Execution",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
