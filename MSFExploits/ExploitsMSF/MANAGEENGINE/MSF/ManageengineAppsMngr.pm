package MSFExploits::Exploits::MANAGEENGINE::MSF::ManageengineAppsMngr;
# use parent qw(MSFExploits::Exploit MSFExploits::Services::MANAGEENGINE);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use Coro qw( async );

# # use MSFExploits::Functions::Basic;
# # use MSFExploits::Functions::Errors;
# # use MSFExploits::Functions::Content;

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   my ( $requester, $database ) = @_;

   my $name = "ManageengineAppsMngr";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

            This module logs into the Manage Engine Applications Manager to upload a

          payload to the file system and a batch script that executes the payload. ",
  METHOD      => "POST",
  MSF_MODULE  => "manageengine_apps_mngr",
  PATH        => "#{target_url}/j_security_check?",
  PATHS       => [
                   "#{target_url}/webclient/common/jsp/home.jsp",
                   "#{target_url}/j_security_check",
                 ],
  PAYLOAD     => "",
  TITLE       => "ManageEngine Applications Manager Authenticated Code Execution",
  VARIABLES => {
    'PASS' =>       { DESCRIPTION => "", VALUE => "" },
    'USER' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'WINDOWS',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Host' => '127.0.0.1:80',
        'Cookie' => 'pagerefresh=1; NfaupdateMsg=true; sortBy=sByName; testcookie=; am_username=;am_check=',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($requester, $database, $name, $DETECTION, $EXPLOIT, @_);
}

return 1;
