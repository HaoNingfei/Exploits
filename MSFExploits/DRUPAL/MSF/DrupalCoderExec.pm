package DRUPAL::MSF::DrupalCoderExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "DrupalCoderExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a Remote Command Execution vulnerability in the

        Drupal CODER Module. Unauthenticated users can execute arbitrary

        commands under the context of the web server user.



        The CODER module doesn't sufficiently validate user inputs in a script

        file that has the PHP extension. A malicious unauthenticated user can

        make requests directly to this file to execute arbitrary commands.

        The module does not need to be enabled for this to be exploited.



        This module was tested against CODER 2.5 with Drupal 7.5 installed on

        Ubuntu Server.

      ",
  MSF_MODULE => "drupal_coder_exec",
  PATHS => [""],
  REFERENCES => ["https://www.drupal.org/node/2765575"],
  TITLE => "Drupal CODER Module Remote Command Execution",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "The target URI of the Drupal installation",
  VALUE => "/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
