package INVISION::MSF::InvisionPboardUnserializeExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "InvisionPboardUnserializeExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2012-5692",
  DESCRIPTION => "

          This module exploits a php unserialize() vulnerability in Invision IP.Board

        <= 3.3.4 which could be abused to allow unauthenticated users to execute arbitrary

        code under the context of the webserver user.



        The dangerous unserialize() exists in the '/admin/sources/base/core.php' script,

        which is called with user controlled data from the cookie. The exploit abuses the

        __destruct() method from the dbMain class to write arbitrary PHP code to a file on

        the Invision IP.Board web directory.



        The exploit has been tested successfully on Invision IP.Board 3.3.4.

      ",
  MSF_MODULE => "invision_pboard_unserialize_exec",
  OSVDB => 86702,
  REFERENCES => [
    "http://community.invisionpower.com/topic/371625-ipboard-31x-32x-and-33x-critical-security-update/",
  ],
  TITLE => "Invision IP.Board unserialize() PHP Code Execution",


  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
