package WEBDAV::MSF::WebdavInternalIp;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "WebdavInternalIp";

   my $DETECTION = {
  METHOD => 'PROPFIND',
  PATH => '/',
  PAYLOAD => '',
  TEXT => 'Checking If : / Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  DESCRIPTION => undef,
  METHOD => "PROPFIND",
  MSF_MODULE => "webdav_internal_ip",
  TITLE => "HTTP WebDAV Internal IP Scanner",
  VARIABLES => {
    'PATH' =>       { DESCRIPTION => "", VALUE => "" },
  },

  TYPE => 'MSF',
  PLATFORM => 'SCANNER',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'PROPFIND',
      PATH   => '',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #2 Request : [PROPFIND] /',
      HEADERS      => {
        'Host' => '',
        'Content-Type' => 'text/xml',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
